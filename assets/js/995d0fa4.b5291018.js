"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3037],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=o,h=u["".concat(c,".").concat(m)]||u[m]||l[m]||a;return t?r.createElement(h,i(i({ref:n},d),{},{components:t})):r.createElement(h,i({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},54630:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>b,frontMatter:()=>s,metadata:()=>p,toc:()=>l});t(67294);var r=t(3905);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const s={id:"breadcrumb",title:"Breadcrumb",sidebar_label:"Breadcrumb",swizzle:!0},c=void 0,p={unversionedId:"api-reference/antd/components/breadcrumb",id:"api-reference/antd/components/breadcrumb",title:"Breadcrumb",description:"A breadcrumb displays the current location within a hierarchy. It allows going back to states higher up in the hierarchy. The ` component was built with Ant Design's Breadcrumb components using the useBreadcrumb` hook.",source:"@site/docs/api-reference/antd/components/breadcrumb.md",sourceDirName:"api-reference/antd/components",slug:"/api-reference/antd/components/breadcrumb",permalink:"/docs/api-reference/antd/components/breadcrumb",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/api-reference/antd/components/breadcrumb.md",tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1695146244,formattedLastUpdatedAt:"Sep 19, 2023",frontMatter:{id:"breadcrumb",title:"Breadcrumb",sidebar_label:"Breadcrumb",swizzle:!0},sidebar:"someSidebar",previous:{title:"Show",permalink:"/docs/api-reference/antd/components/basic-views/show"},next:{title:"Clone",permalink:"/docs/api-reference/antd/components/buttons/clone-button"}},d={},l=[{value:"Properties",id:"properties",level:2},{value:"<code>breadcrumbProps</code>",id:"breadcrumbprops",level:3},{value:"<code>showHome</code>",id:"showhome",level:3},{value:"<code>meta</code>",id:"meta",level:3},{value:"<code>hideIcons</code>",id:"hideicons",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties-1",level:3}],u=(m="PropsTable",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var m;const h={toc:l};function b(e){var{components:n}=e,t=i(e,["components"]);return(0,r.kt)("wrapper",a(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){o(e,n,t[n])}))}return e}({},h,t),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A breadcrumb displays the current location within a hierarchy. It allows going back to states higher up in the hierarchy. The ",(0,r.kt)("inlineCode",{parentName:"p"},"<Breadcrumb>")," component was built with Ant Design's ",(0,r.kt)("a",{parentName:"p",href:"https://ant.design/components/breadcrumb"},"Breadcrumb")," components using the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/hooks/useBreadcrumb"},(0,r.kt)("inlineCode",{parentName:"a"},"useBreadcrumb"))," hook."),(0,r.kt)("admonition",{title:"Swizzle",type:"info-tip"},(0,r.kt)("p",{parentName:"admonition"},"You can swizzle this component to customize it with the ",(0,r.kt)("a",{parentName:"p",href:"/docs/packages/documentation/cli"},(0,r.kt)("strong",{parentName:"a"},"refine CLI")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/show/123 previewHeight=280px disableScroll",live:!0,url:"http://localhost:3000/posts/show/123",previewHeight:"280px",disableScroll:!0},'// visible-block-start\nimport { BrowserRouter } from "react-router-dom";\nimport {\n    ConfigProvider,\n    RefineThemes,\n    Show,\n    // highlight-next-line\n    Breadcrumb,\n} from "@refinedev/antd";\n\n//highlight-start\nconst PostIcon = (\n    <svg\n        xmlns="http://www.w3.org/2000/svg"\n        className="icon icon-tabler icon-tabler-list"\n        width={18}\n        height={18}\n        viewBox="0 0 24 24"\n        strokeWidth="2"\n        stroke="currentColor"\n        fill="none"\n        strokeLinecap="round"\n        strokeLinejoin="round"\n    >\n        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>\n        <line x1={9} y1={6} x2={20} y2={6}></line>\n        <line x1={9} y1={12} x2={20} y2={12}></line>\n        <line x1={9} y1={18} x2={20} y2={18}></line>\n        <line x1={5} y1={6} x2={5} y2="6.01"></line>\n        <line x1={5} y1={12} x2={5} y2="12.01"></line>\n        <line x1={5} y1={18} x2={5} y2="18.01"></line>\n    </svg>\n);\n//highlight-end\n\nconst PostShow: React.FC = () => {\n    return (\n        <Show\n            // highlight-next-line\n            breadcrumb={<Breadcrumb />}\n        >\n            <p>Content of your show page...</p>\n        </Show>\n    );\n};\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <ConfigProvider theme={RefineThemes.Blue}>\n                <Refine\n                    //...\n                    resources={[\n                        {\n                            name: "posts",\n                            list: "/posts",\n                            show: "/posts/show/:id",\n                            // highlight-next-line\n                            meta: { icon: PostIcon },\n                        },\n                    ]}\n                >\n                    //...\n                </Refine>\n            </ConfigProvider>\n        </BrowserRouter>\n    );\n};\n// visible-block-end\n\nconst PostList = () => {\n    return (\n        <RefineAntd.List>\n            <p>Content of your list page...</p>\n        </RefineAntd.List>\n    );\n};\n\nsetInitialRoutes(["/posts/show/123"]);\n\nrender(\n    <ReactRouterDom.BrowserRouter>\n        <RefineCore.Refine\n            dataProvider={RefineSimpleRest.default(\n                "https://api.fake-rest.refine.dev",\n            )}\n            routerProvider={RefineReactRouterV6.default}\n            resources={[\n                {\n                    name: "posts",\n                    meta: { icon: PostIcon },\n                    show: "/posts/show/:id",\n                    list: "/posts",\n                },\n            ]}\n        >\n            <RefineAntd.Layout>\n                <ReactRouterDom.Routes>\n                    <ReactRouterDom.Route\n                        path="/posts"\n                        element={<PostList />}\n                    />\n                    <ReactRouterDom.Route\n                        path="/posts/show/:id"\n                        element={<PostShow />}\n                    />\n                </ReactRouterDom.Routes>\n            </RefineAntd.Layout>\n        </RefineCore.Refine>\n    </ReactRouterDom.BrowserRouter>,\n);\n')),(0,r.kt)("admonition",{title:"Legacy Behavior (Dashboard Page)",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In the earlier versions of ",(0,r.kt)("strong",{parentName:"p"},"refine"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine>")," component had accepted ",(0,r.kt)("inlineCode",{parentName:"p"},"DashboardPage"),", which could be used to add an index page to your app. With the changes in the ",(0,r.kt)("inlineCode",{parentName:"p"},"routerProvider")," API of ",(0,r.kt)("strong",{parentName:"p"},"refine")," however, ",(0,r.kt)("inlineCode",{parentName:"p"},"DashboardPage")," is deprecated. You can now define an index route yourself manually by your router package."),(0,r.kt)("p",{parentName:"admonition"},"In earlier versions, the home icon in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Breadcrumb")," was created by the ",(0,r.kt)("inlineCode",{parentName:"p"},"DashboardPage"),", now it is rendered if you define a an action route as ",(0,r.kt)("inlineCode",{parentName:"p"},"/")," in any one of your resources. It will be rendered with the home icon regardless of the current route. You can also hide the home icon by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"showHome")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),".")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"breadcrumbprops"},(0,r.kt)("inlineCode",{parentName:"h3"},"breadcrumbProps")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"<Breadcrumb>")," component uses the Ant Design ",(0,r.kt)("a",{parentName:"p",href:"https://ant.design/components/breadcrumb"},"Breadcrumb")," component so it can be configured with the ",(0,r.kt)("inlineCode",{parentName:"p"},"breadcrumbProps")," property."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/antd";\n\nexport const PostList: React.FC = () => {\n    return (\n        <List\n            // highlight-next-line\n            breadcrumb={<Breadcrumb breadcrumbProps={{ separator: "-" }} />}\n        >\n            ...\n        </List>\n    );\n};\n')),(0,r.kt)("h3",{id:"showhome"},(0,r.kt)("inlineCode",{parentName:"h3"},"showHome")),(0,r.kt)("p",null,"If you have a page with route ",(0,r.kt)("inlineCode",{parentName:"p"},"/"),", it will be used as the root of the hierarchy and shown in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Breadcrumb")," with a home icon. To hide the root item, set ",(0,r.kt)("inlineCode",{parentName:"p"},"showHome")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/antd";\n\nexport const PostList: React.FC = () => {\n    return (\n        <List\n            // highlight-next-line\n            breadcrumb={<Breadcrumb showHome={true} />}\n        >\n            ...\n        </List>\n    );\n};\n')),(0,r.kt)("h3",{id:"meta"},(0,r.kt)("inlineCode",{parentName:"h3"},"meta")),(0,r.kt)("p",null,"If your routes has additional parameters in their paths, you can pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"meta")," property to the ",(0,r.kt)("inlineCode",{parentName:"p"},"<Breadcrumb>")," component to use them while creating the paths and filling the parameters in the paths. By default, the existing URL parameters are used. You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"meta")," to override them or add new ones."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/antd";\n\nexport const PostList: React.FC = () => {\n    return (\n        <List\n            // highlight-next-line\n            breadcrumb={<Breadcrumb meta={{ authorId: "123" }} />}\n        >\n            ...\n        </List>\n    );\n};\n')),(0,r.kt)("h3",{id:"hideicons"},(0,r.kt)("inlineCode",{parentName:"h3"},"hideIcons")),(0,r.kt)("p",null,"If you don't want to show the resource icons on the breadcrumb, you can set ",(0,r.kt)("inlineCode",{parentName:"p"},"hideIcons")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/antd";\n\nexport const PostList: React.FC = () => {\n    return (\n        <List\n            // highlight-next-line\n            breadcrumb={<Breadcrumb hideIcons />}\n        >\n            ...\n        </List>\n    );\n};\n')),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("h3",{id:"properties-1"},"Properties"),(0,r.kt)(u,{module:"@refinedev/antd/Breadcrumb","breadcrumbProps-type":"[BreadcrumbProps](https://ant.design/components/breadcrumb/#API)","breadcrumbProps-description":"Passes properties for [`<Breadcrumb>`](https://ant.design/components/breadcrumb/#Breadcrumb)",mdxType:"PropsTable"}))}b.isMDXComponent=!0}}]);