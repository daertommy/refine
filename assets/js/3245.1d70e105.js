"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3245],{3245:e=>{e.exports=JSON.parse('{"filePath":"/home/runner/work/refine/refine/packages/mantine/src/index.tsx","description":"","displayName":"Edit","props":{"resource":{"defaultValue":{"value":"Reads `:resource` from the URL"},"description":"Resource name for API data interactions","name":"resource","required":false,"type":{"name":"string"},"tags":{"default":"Reads `:resource` from the URL"}},"title":{"defaultValue":{"value":"Edit {resource.name}"},"description":"Title of the edit view","name":"title","required":false,"type":{"name":"ReactNode"},"tags":{"default":"Edit {resource.name}"}},"wrapperProps":{"defaultValue":null,"description":"Props for the wrapper component of the view","name":"wrapperProps","required":false,"type":{"name":"CardProps"},"tags":{}},"headerProps":{"defaultValue":null,"description":"Props for the header component","name":"headerProps","required":false,"type":{"name":"GroupProps"},"tags":{}},"contentProps":{"defaultValue":null,"description":"Props for the content wrapper component","name":"contentProps","required":false,"type":{"name":"BoxProps"},"tags":{}},"breadcrumb":{"defaultValue":{"value":"`<Breadcrumb />`"},"description":"Breadcrumb to be displayed in the header","name":"breadcrumb","required":false,"type":{"name":"ReactNode"},"tags":{"default":"`<Breadcrumb />`"}},"goBack":{"defaultValue":null,"description":"Back button element at the top left of the page","name":"goBack","required":false,"type":{"name":"ReactNode"},"tags":{}},"headerButtons":{"defaultValue":{"value":"If `recordItemId` is passed `<RefreshButton />` otherwise `<RefreshButton /> <ListButton />`"},"description":"Header action buttons to be displayed in the header","name":"headerButtons","required":false,"type":{"name":"ActionButtonRenderer<{ refreshButtonProps: RefreshButtonProps; listButtonProps: ListButtonProps; }>"},"tags":{"default":"If `recordItemId` is passed `<RefreshButton />` otherwise `<RefreshButton /> <ListButton />`"}},"headerButtonProps":{"defaultValue":null,"description":"Additional props to be passed to the wrapper of the header buttons","name":"headerButtonProps","required":false,"type":{"name":"GroupProps"},"tags":{}},"footerButtons":{"defaultValue":{"value":"If `canDelete` is passed `<SaveButton /> <DeleteButton />` otherwise `<SaveButton />`"},"description":"Footer action buttons to be displayed in the footer","name":"footerButtons","required":false,"type":{"name":"ActionButtonRenderer<{ deleteButtonProps: DeleteButtonProps; saveButtonProps: SaveButtonProps; }>"},"tags":{"default":"If `canDelete` is passed `<SaveButton /> <DeleteButton />` otherwise `<SaveButton />`"}},"footerButtonProps":{"defaultValue":null,"description":"Additional props to be passed to the wrapper of the footer buttons","name":"footerButtonProps","required":false,"type":{"name":"GroupProps"},"tags":{}},"dataProviderName":{"defaultValue":null,"description":"To specify a data provider other than default use this property","name":"dataProviderName","required":false,"type":{"name":"string"},"tags":{}},"isLoading":{"defaultValue":{"value":"`false`"},"description":"Loading state of the component","name":"isLoading","required":false,"type":{"name":"boolean"},"tags":{"default":"`false`"}},"canDelete":{"defaultValue":{"value":"If the resource has `canDelete` prop it is `true` else `false`"},"description":"Adds a `<DeleteButton />`","name":"canDelete","required":false,"type":{"name":"boolean"},"tags":{"default":"If the resource has `canDelete` prop it is `true` else `false`"}},"saveButtonProps":{"defaultValue":null,"description":"Additional props for the `<SaveButton />` component","name":"saveButtonProps","required":false,"type":{"name":"SaveButtonProps"},"tags":{}},"deleteButtonProps":{"defaultValue":null,"description":"Adds properties for `<DeleteButton />`","name":"deleteButtonProps","required":false,"type":{"name":"DeleteButtonProps"},"tags":{}},"mutationMode":{"defaultValue":{"value":"`\\"pessimistic\\"`\\\\*"},"description":"[Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)","name":"mutationMode","required":false,"type":{"name":"\\"pessimistic\\" | \\"optimistic\\" | \\"undoable\\"","raw":"MutationMode","value":[{"value":"\\"pessimistic\\""},{"value":"\\"optimistic\\""},{"value":"\\"undoable\\""}]},"tags":{"default":"`\\"pessimistic\\"`\\\\*"}},"recordItemId":{"defaultValue":null,"description":"The record id for `<RefreshButton>`","name":"recordItemId","required":false,"type":{"name":"[BaseKey](/docs/api-reference/core/interfaceReferences/#basekey)"},"tags":{}},"autoSaveProps":{"defaultValue":null,"description":"Show <AutoSaveIndicator /> component on header buttons","name":"autoSaveProps","required":false,"type":{"name":"AutoSaveIndicatorProps<BaseRecord, HttpError, {}>"},"tags":{}}},"generatedAt":1700658743885}')}}]);