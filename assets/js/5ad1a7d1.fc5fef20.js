"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[32211],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||c[m]||a;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},14896:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>k,frontMatter:()=>p,metadata:()=>l,toc:()=>c});n(67294);var r=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const p={id:"index",title:"Resources",tutorial:{order:0,prev:!1,next:"tutorial/adding-crud-pages/{preferredUI}/index"}},s=void 0,l={unversionedId:"tutorial/understanding-resources/index",id:"version-3.xx.xx/tutorial/understanding-resources/index",title:"Resources",description:"In the Unit 2.4, we have defined a resource to create our CRUD pages with the Inferencer component. However, we have not explained how it works. In this unit, we will explain the resources prop of the `` component using the mock components.",source:"@site/versioned_docs/version-3.xx.xx/tutorial/3-understanding-resources/0-intro.md",sourceDirName:"tutorial/3-understanding-resources",slug:"/tutorial/understanding-resources/index",permalink:"/docs/3.xx.xx/tutorial/understanding-resources/index",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/versioned_docs/version-3.xx.xx/tutorial/3-understanding-resources/0-intro.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1694813967,formattedLastUpdatedAt:"Sep 15, 2023",sidebarPosition:0,frontMatter:{id:"index",title:"Resources",tutorial:{order:0,prev:!1,next:"tutorial/adding-crud-pages/{preferredUI}/index"}}},d={},c=[{value:"Learn More",id:"learn-more",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},m=u("UIConditional"),f=u("Checklist"),h=u("ChecklistItem"),g={toc:c};function k(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},g,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Remember",type:"info"},(0,r.kt)(m,{is:"antd",mdxType:"UIConditional"},(0,r.kt)("p",{parentName:"admonition"},"In the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorial/getting-started/antd/generate-crud-pages/"},"Unit 2.4"),", we have defined a resource to create our CRUD pages with the Inferencer component. However, we have not explained how it works. In this unit, we will explain the ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," prop of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine/>")," component using the mock components.")),(0,r.kt)(m,{is:"chakra-ui",mdxType:"UIConditional"},(0,r.kt)("p",{parentName:"admonition"},"In the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorial/getting-started/chakra-ui/generate-crud-pages/"},"Unit 2.4"),", we have defined a resource to create our CRUD pages with the Inferencer component. However, we have not explained how it works. In this unit, we will explain the ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," prop of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine/>")," component using the mock components.")),(0,r.kt)(m,{is:"headless",mdxType:"UIConditional"},(0,r.kt)("p",{parentName:"admonition"},"In the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorial/getting-started/headless/generate-crud-pages/"},"Unit 2.4"),", we have defined a resource to create our CRUD pages with the Inferencer component. However, we have not explained how it works. In this unit, we will explain the ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," prop of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine/>")," component using the mock components.")),(0,r.kt)(m,{is:"mantine",mdxType:"UIConditional"},(0,r.kt)("p",{parentName:"admonition"},"In the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorial/getting-started/mantine/generate-crud-pages/"},"Unit 2.4"),", we have defined a resource to create our CRUD pages with the Inferencer component. However, we have not explained how it works. In this unit, we will explain the ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," prop of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine/>")," component using the mock components.")),(0,r.kt)(m,{is:"mui",mdxType:"UIConditional"},(0,r.kt)("p",{parentName:"admonition"},"In the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorial/getting-started/mui/generate-crud-pages/"},"Unit 2.4"),", we have defined a resource to create our CRUD pages with the Inferencer component. However, we have not explained how it works. In this unit, we will explain the ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," prop of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine/>")," component using the mock components."))),(0,r.kt)("p",null,"Before we start, let's understand what is ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine/>")," component."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine/>")," is the starting point of the ",(0,r.kt)("strong",{parentName:"p"},"refine")," app. It is a wrapper component that provides the context to the ",(0,r.kt)("strong",{parentName:"p"},"refine")," components and hooks. It is used to configure the highest level settings of the app."),(0,r.kt)("p",null,"In order to initialize the app, the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"routerProvider")," props must be provided. Additionally, it also has other props such as ",(0,r.kt)("inlineCode",{parentName:"p"},"resources"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"authProvider"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"i18nProvider"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Layout")," etc. These props allow for the configuration of different aspects of the app, including data management, routing, authentication, localization, layout etc."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/components/refine-config/"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"<Refine/>")," documentation for more information ","\u2192")),(0,r.kt)("p",null,"In the context of a CRUD application, a resource typically refers to a data entity that can be created, read, updated, or deleted. For example, a resource could be a user account, a blog post, a blog post in an online store, or any other piece of data that can be managed by the CRUD app."),(0,r.kt)("p",null,"To add a ",(0,r.kt)("inlineCode",{parentName:"p"},"resource")," to our app, we need use ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," prop of ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine/>")," component. This prop accepts an array of objects. Each object represents a resource."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},'import { Refine } from "@pankod/refine-core";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            routerProvider={routerProvider}\n            dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n            //highlight-start\n            resources={[\n                {\n                    name: "blog_posts",\n                    list: () => <div>Blog Posts List Page</div>,\n                    show: <div>Blog Post Detail Page</div>,\n                    create: <div>Blog Post Create Page</div>,\n                    edit: <div>Blog Post Edit Page</div>,\n                },\n            ]}\n            //highlight-end\n        />\n    );\n};\n\nexport default App;\n')),(0,r.kt)("p",null,"In the above example, we have added a ",(0,r.kt)("inlineCode",{parentName:"p"},"resource")," with name ",(0,r.kt)("inlineCode",{parentName:"p"},"blog_posts"),". This resource will have 5 pages that assigned to ",(0,r.kt)("inlineCode",{parentName:"p"},"list"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"show"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"create"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"edit")," properties. ",(0,r.kt)("strong",{parentName:"p"},"refine")," link the pages with routes for us."),(0,r.kt)("p",null,"When we define ",(0,r.kt)("inlineCode",{parentName:"p"},"create"),", clone page will be generated automatically. We can access these pages by visiting the following routes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/blog-posts")," - Blog Post List Page"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/blog-posts/show/:id")," - Blog Post Detail Page"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/blog-posts/create")," - Blog Post Create Page"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/blog-posts/clone/:id")," - Blog Post Clone Page"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/blog-posts/edit/:id")," - Blog Post Edit Page")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"When using the ",(0,r.kt)("strong",{parentName:"p"},"refine")," hooks and components in the created pages, the ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," property of the ",(0,r.kt)("inlineCode",{parentName:"p"},"resource")," will be passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider")," functions, by default.")),(0,r.kt)("h2",{id:"learn-more"},"Learn More"),(0,r.kt)("p",null,"Learn more about ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/components/refine-config/#resources"},"resources")," in the API reference."),(0,r.kt)(f,{mdxType:"Checklist"},(0,r.kt)(h,{id:"understanding-resource",mdxType:"ChecklistItem"},"I understood what a resource is and how to add a resource to the app.")))}k.isMDXComponent=!0}}]);