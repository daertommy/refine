"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[64356],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(h,i(i({ref:n},u),{},{components:t})):r.createElement(h,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},30697:(e,n,t)=>{t.d(n,{x:()=>v});var r=t(86010),o=t(67294),a=t(73808),i=t(96319),s=t(79526);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}const c=({onClick:e})=>o.createElement(i.z,{className:(0,r.Z)(),onClick:e,title:"Report Issue"},o.createElement(u,null)),u=e=>o.createElement("svg",function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){l(e,n,t[n])}))}return e}({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,viewBox:"0 0 512 512"},e),o.createElement("title",null,"Report issue"),o.createElement("path",{fill:"none",stroke:"currentColor",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:32,d:"M370 378c28.89 23.52 46 46.07 46 86m-274-86c-28.89 23.52-46 46.06-46 86m288-256c28.89-23.52 32-56.07 32-96m-288 94c-28.89-23.52-32-54.06-32-94m368 176.13h-80m-256 0H48M256 192v256"}),o.createElement("path",{fill:"none",stroke:"currentColor",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:32,d:"M256 448h0c-70.4 0-128-57.6-128-128v-96.07c0-65.07 57.6-96 128-96h0c70.4 0 128 25.6 128 96V320c0 70.4-57.6 128-128 128z"}),o.createElement("path",{fill:"none",stroke:"currentColor",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:32,d:"M179.43 143.52a49.08 49.08 0 0 1-3.43-15.73A80 80 0 0 1 255.79 48h.42A80 80 0 0 1 336 127.79a41.91 41.91 0 0 1-3.12 14.3"})),p=({visible:e,onClose:n})=>o.createElement("div",{className:(0,r.Z)("absolute","left-0","top-0","right-0","bottom-0",!e&&"opacity-0",e&&"opacity-100",!e&&"pointer-events-none",!e&&"w-0",!e&&"!h-0",!e&&"overflow-hidden",e&&"w-full",e&&"h-full","bg-gray-200","bg-opacity-10","backdrop-blur-sm","p-8","z-[4]")},o.createElement("div",{className:(0,r.Z)("absolute","left-1/2","top-1/2","max-w-sm","w-full","-translate-x-1/2","-translate-y-1/2","rounded","bg-gray-0","shadow-md","p-4","border","border-gray-100")},o.createElement("form",{className:(0,r.Z)("flex","flex-col","gap-4"),onSubmit:e=>{e.preventDefault();const t=new FormData(e.currentTarget).get("email");console.log(t),n()}},o.createElement("div",{className:(0,r.Z)("text-gray-500","text-xs")},"Thank you for reporting this issue! We'll fix it as soon as possible. If you want to get notified when it's fixed, let us email you!"),o.createElement("input",{name:"email",type:"email",placeholder:"Your email address",className:(0,r.Z)("placeholder:text-gray-300","text-gray-700","py-2","px-2","rounded","border","border-gray-100","focus:outline-none","focus:ring","focus:ring-gray-50")}),o.createElement("div",{className:(0,r.Z)("flex","items-center","justify-between")},o.createElement("button",{type:"button",className:(0,r.Z)("py-2","px-3","rounded","transition-all","duration-200","ease-in-out","bg-transparent","hover:bg-gray-100","focus:bg-gray-100","text-gray-500"),onClick:()=>n()},"Cancel"),o.createElement("button",{type:"submit",className:(0,r.Z)("py-2","px-3","rounded","transition-all","duration-200","ease-in-out","text-gray-0","bg-refine-blue","hover:brightness-110","focus:brightness-75")},"Get Notified!"))))),d=({horizontalSize:e,onMouseDown:n})=>o.createElement("div",{className:(0,r.Z)("resize-handler","hidden","md:block","absolute","z-[3]","top-0","bottom-0","w-2.5","cursor-ew-resize"),"data-direction":"horizontal",onMouseDown:n,style:{left:`calc(${e}% - 5px)`}});function m(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function h(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){m(e,n,t[n])}))}return e}function f(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function g(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const v=e=>{var n;return"nextjs"===(null===(n=e)||void 0===n?void 0:n.template)?o.createElement(y,e):o.createElement(k,e)},k=e=>{var n,t,l,u,m,v,k,y,b,w,N,x,R,P,C,{startRoute:T,showNavigator:A,initialPercentage:I=50,dependencies:L,options:O={showTabs:!0,initMode:"lazy",classes:{"sp-cm":"p-0 bg-transparent"}},template:S="react-ts",customSetup:E,files:B,previewOnly:D,layout:M,height:j=420,wrapperClassName:F,className:U,showFiles:H=!1,showConsole:z=!1,hidePreview:G=!1}=e,q=g(e,["startRoute","showNavigator","initialPercentage","dependencies","options","template","customSetup","files","previewOnly","layout","height","wrapperClassName","className","showFiles","showConsole","hidePreview"]);const{colorMode:W}=(0,s.I)();var V,Z;null!=O||(O={}),null!==(V=(P=O).resizablePanels)&&void 0!==V||(P.resizablePanels=!0),null!==(Z=(C=O).editorWidthPercentage)&&void 0!==Z||(C.editorWidthPercentage=null!=I?I:50);const K={showTabs:O.showTabs,showLineNumbers:O.showLineNumbers,showInlineErrors:O.showInlineErrors,wrapContent:O.wrapContent,closableTabs:O.closableTabs,initMode:O.initMode,extensions:null===(n=O.codeEditor)||void 0===n?void 0:n.extensions,extensionsKeymap:null===(t=O.codeEditor)||void 0===t?void 0:t.extensionsKeymap,readOnly:O.readOnly,showReadOnly:O.showReadOnly,additionalLanguages:null===(l=O.codeEditor)||void 0===l?void 0:l.additionalLanguages},Y={activeFile:O.activeFile,visibleFiles:O.visibleFiles,recompileMode:O.recompileMode,recompileDelay:O.recompileDelay,autorun:O.autorun,autoReload:O.autoReload,bundlerURL:O.bundlerURL,startRoute:O.startRoute,skipEval:O.skipEval,fileResolver:O.fileResolver,initMode:O.initMode,initModeObserverOptions:O.initModeObserverOptions,externalResources:O.externalResources,logLevel:O.logLevel,classes:O.classes},[J,$]=o.useState(!1),{onHandleMouseDown:Q,horizontalSize:X}=(({initialSize:e=50})=>{const[n,t]=o.useState(e),r=o.useRef(null),a=e=>{if(!r.current)return;const n=r.current.parentElement;if(!n)return;const{left:o,width:a}=n.getBoundingClientRect(),i=(e.clientX-o)/a*100,s=Math.min(Math.max(i,25),75);t(s),n.querySelectorAll(".sp-stack").forEach((e=>{e.style.pointerEvents="none"}))},i=()=>{var e;const n=null===(e=r.current)||void 0===e?void 0:e.parentElement;n&&(n.querySelectorAll(".sp-stack").forEach((e=>{e.style.pointerEvents=""})),r.current=null)};return o.useEffect((()=>(document.body.addEventListener("mousemove",a),document.body.addEventListener("mouseup",i),()=>{document.body.removeEventListener("mousemove",a),document.body.removeEventListener("mouseup",i)})),[]),{horizontalSize:n,onHandleMouseDown:o.useCallback((e=>{r.current=e.target}),[])}})({initialSize:O.editorWidthPercentage}),_=!D&&!(null===(m=M)||void 0===m||null===(u=m.includes)||void 0===u?void 0:u.call(m,"col"));var ee,ne,te,re,oe,ae;return o.createElement(o.Fragment,null,o.createElement("div",{className:(0,r.Z)("pb-6",F)},o.createElement("div",{className:(0,r.Z)("absolute","left-0","right-0","w-full","px-2","md:px-4","xl:px-6","max-w-screen-xl","mx-auto",U)},o.createElement(i.oT,h({key:S,customSetup:h({dependencies:L},E),files:B,options:Y,template:S,theme:"light"===W?f(h({},i.dN),{colors:f(h({},i.dN.colors),{surface1:"#F4F8FB",surface2:"rgb(222, 229, 237)",surface3:"rgb(222, 229, 237)"})}):f(h({},a.I2),{colors:f(h({},a.I2.colors),{surface1:"#1D1E30",surface2:"#303450",surface3:"#303450"})}),className:(0,r.Z)("not-prose sandpack-container","max-w-screen-xl")},q),o.createElement(i.sp,{className:(0,r.Z)("col"===M&&"!flex-col","col-reverse"===M&&"!flex-col-reverse")},H&&o.createElement(i.Lj,{autoHiddenFiles:!0,style:{height:null!==(ee=O.editorHeight)&&void 0!==ee?ee:j}}),!D&&o.createElement(i._V,f(h({},K),{initMode:"lazy",style:f(h({height:null!==(ne=O.editorHeight)&&void 0!==ne?ne:j},(null===(k=M)||void 0===k||null===(v=k.includes)||void 0===v?void 0:v.call(k,"col"))?{flex:"initial"}:{flexGrow:X,flexShrink:X,flexBasis:0}),{overflow:"hidden"})})),z?o.createElement(i.Tq,{style:f(h({height:null!==(te=O.editorHeight)&&void 0!==te?te:j},(null===(b=M)||void 0===b||null===(y=b.includes)||void 0===y?void 0:y.call(b,"col"))?{flex:"initial"}:{flexGrow:X,flexShrink:X,flexBasis:0}),{overflow:"hidden"})}):null,_?o.createElement(d,{onMouseDown:Q,horizontalSize:X}):null,o.createElement(i.Gj,{actionsChildren:o.createElement(c,{onClick:()=>$(!0)}),startRoute:T,showNavigator:null!=A?A:O.showNavigator,showRefreshButton:O.showRefreshButton,style:f(h({display:G?"none":"flex"},(null===(N=M)||void 0===N||null===(w=N.includes)||void 0===w?void 0:w.call(N,"col"))?{flex:"initial",width:"100%"}:{flexGrow:100-X,flexShrink:100-X,flexBasis:0,width:D?"100%":100-X+"%"}),{gap:0,height:null!==(re=O.editorHeight)&&void 0!==re?re:j})},o.createElement("div",{className:"sp-custom-loading"},o.createElement("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/spinner.gif",className:(0,r.Z)("w-12","h-12","rounded-full")}))),o.createElement(p,{visible:J,onClose:()=>$(!1)})))),o.createElement("div",{className:(0,r.Z)(""),style:{height:Number(null!==(oe=O.editorHeight)&&void 0!==oe?oe:j)+2}}),o.createElement("div",{className:(0,r.Z)((null===(R=M)||void 0===R||null===(x=R.includes)||void 0===x?void 0:x.call(R,"col"))?"block":"block md:hidden"),style:{height:Number(null!==(ae=O.editorHeight)&&void 0!==ae?ae:j)+2}})),o.createElement("section",{className:"hidden max-w-0 max-h-0"},o.createElement("p",null,`Dependencies: ${Object.keys(null!=L?L:{}).map((e=>`${e}@${L[e]}`))}`),o.createElement("h3",null,"Code Files"),Object.keys(null!=B?B:{}).map((e=>o.createElement("div",{key:e},o.createElement("div",null,`File: ${e}`),o.createElement("div",null,`Content: ${"code"in B[e]?B[e].code:B[e]}`))))))},y=e=>{const n={hidePreview:!0};return o.createElement(k,f(h({},e,n),{template:"react-ts"}))};'\nimport { NavigateToResource } from "@refinedev/nextjs-router";\n\nconst Home = () => {\n    return <NavigateToResource resource="products" />;\n};\n\nexport default Home;\n'.trim()},34347:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>F,contentTitle:()=>M,default:()=>W,frontMatter:()=>D,metadata:()=>j,toc:()=>U});var r=t(67294),o=t(3905),a=t(30697);function i(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/antd":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/inferencer":"latest","react-router-dom":"latest","react-router":"latest",antd:"^5.0.5"},startRoute:"/my-products",files:{"/App.tsx":{code:s},"/pages/products/list.tsx":{code:l},"/pages/products/show.tsx":{code:c,active:!0}}})}const s='\nimport React from "react";\n\nimport { App as AntdApp, ConfigProvider } from "antd";\nimport { BrowserRouter, Route, Routes, Outlet } from "react-router-dom";\nimport "@refinedev/antd/dist/reset.css";\n\nimport { ErrorComponent, RefineThemes, ThemedLayoutV2 } from "@refinedev/antd";\nimport { Refine } from "@refinedev/core";\nimport routerProvider from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nimport { ProductList } from "./pages/products/list.tsx";\nimport { ProductShow } from "./pages/products/show.tsx";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <ConfigProvider theme={RefineThemes.Blue}>\n        <AntdApp>\n          <Refine\n            routerProvider={routerProvider}\n            dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n            authProvider={{\n              check: async () => ({  authenticated: true }),\n              getIdentity: async () => ({ id: 1, name: "John Doe", avatar: "https://i.pravatar.cc/300"})\n            }}\n            resources={[\n              {\n                name: "products",\n                list: "/my-products",\n                show: "/my-products/:id"\n              }\n            ]}\n            options={{ syncWithLocation: true }}\n          >\n            <Routes>\n              <Route\n                element={\n                  <ThemedLayoutV2>\n                    <Outlet />\n                  </ThemedLayoutV2>\n                }\n              >\n                <Route path="/my-products" element={<ProductList />} />\n                <Route path="/my-products/:id" element={<ProductShow />} />\n                <Route path="*" element={<ErrorComponent />} />\n              </Route>\n            </Routes>\n          </Refine>\n        </AntdApp>\n      </ConfigProvider>\n    </BrowserRouter>\n  );\n};\n'.trim(),l='\nimport { List, ShowButton, useTable } from "@refinedev/antd";\nimport { BaseRecord, IResourceComponentsProps } from "@refinedev/core";\nimport { Space, Table } from "antd";\nimport React from "react";\n\nexport const ProductList: React.FC<IResourceComponentsProps> = () => {\n  const { tableProps } = useTable();\n\n  return (\n    <List>\n      <Table {...tableProps} rowKey="id">\n        <Table.Column dataIndex="id" title="Id" />\n        <Table.Column dataIndex="name" title="Name" />\n        <Table.Column dataIndex="price" title="Price" />\n        <Table.Column\n          title="Actions"\n          dataIndex="actions"\n          render={(_, record: BaseRecord) => (\n            <Space>\n              <ShowButton hideText size="small" recordItemId={record.id} />\n            </Space>\n          )}\n        />\n      </Table>\n    </List>\n  );\n};\n'.trim(),c='\nimport { MarkdownField, NumberField, Show, TextField } from "@refinedev/antd";\nimport { IResourceComponentsProps, useShow } from "@refinedev/core";\nimport { Typography } from "antd";\nimport React from "react";\n\nconst { Title } = Typography;\n\nexport const ProductShow: React.FC<IResourceComponentsProps> = () => {\n  const { queryResult } = useShow();\n  const { data, isLoading } = queryResult;\n\n  const record = data?.data;\n\n  return (\n    <Show isLoading={isLoading}>\n      <Title level={5}>Id</Title>\n      <NumberField value={record?.id ?? ""} />\n      <Title level={5}>Name</Title>\n      <TextField value={record?.name} />\n      <Title level={5}>Material</Title>\n      <TextField value={record?.material} />\n      <Title level={5}>Description</Title>\n      <MarkdownField value={record?.description} />\n      <Title level={5}>Price</Title>\n      <NumberField value={record?.price ?? ""} />\n    </Show>\n  );\n};\n'.trim();function u(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/antd":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/inferencer":"latest","@refinedev/mui":"latest","react-router-dom":"latest","react-router":"latest","@emotion/react":"^11.8.2","@emotion/styled":"^11.8.1","@mui/lab":"^5.0.0-alpha.85","@mui/material":"^5.14.2","@mui/x-data-grid":"^6.6.0"},startRoute:"/my-products",files:{"/App.tsx":{code:p},"/pages/products/list.tsx":{code:d},"/pages/products/show.tsx":{code:m,active:!0}}})}const p='\nimport React from "react";\n\nimport CssBaseline from "@mui/material/CssBaseline";\nimport GlobalStyles from "@mui/material/GlobalStyles";\nimport { ThemeProvider } from "@mui/material/styles";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport { Refine } from "@refinedev/core";\nimport { ErrorComponent, RefineThemes, ThemedLayoutV2 } from "@refinedev/mui";\nimport routerProvider from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nimport { ProductList } from "./pages/products/list.tsx";\nimport { ProductShow } from "./pages/products/show.tsx";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={RefineThemes.Blue}>\n        <CssBaseline />\n        <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />\n        <Refine\n          routerProvider={routerProvider}\n          dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n          authProvider={{\n            check: async () => ({ authenticated: true }),\n            getIdentity: async () => ({\n              id: 1,\n              name: "John Doe",\n              avatar: "https://i.pravatar.cc/300",\n            }),\n          }}\n          resources={[\n            {\n              name: "products",\n              list: "/my-products",\n              show: "/my-products/:id",\n            },\n          ]}\n          options={{ syncWithLocation: true }}\n        >\n          <Routes>\n            <Route\n              element={\n                <ThemedLayoutV2>\n                  <Outlet />\n                </ThemedLayoutV2>\n              }\n            >\n              <Route path="/my-products" element={<ProductList />} />\n              <Route path="/my-products/:id" element={<ProductShow />} />\n              <Route path="*" element={<ErrorComponent />} />\n            </Route>\n          </Routes>\n        </Refine>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n'.trim(),d='\nimport { DataGrid, GridColDef } from "@mui/x-data-grid";\nimport { IResourceComponentsProps } from "@refinedev/core";\nimport { List, ShowButton, useDataGrid } from "@refinedev/mui";\nimport React from "react";\n\nexport const ProductList: React.FC<IResourceComponentsProps> = () => {\n  const { dataGridProps } = useDataGrid();\n\n  const columns = React.useMemo<GridColDef[]>(\n    () => [\n      {\n        field: "id",\n        headerName: "Id",\n        type: "number",\n        minWidth: 50,\n      },\n      {\n        field: "name",\n        flex: 1,\n        headerName: "Name",\n        minWidth: 200,\n      },\n      {\n        field: "material",\n        flex: 1,\n        headerName: "Material",\n        minWidth: 200,\n      },\n      {\n        field: "actions",\n        headerName: "Actions",\n        sortable: false,\n        renderCell: function render({ row }) {\n          return (\n            <>\n              <ShowButton hideText recordItemId={row.id} />\n            </>\n          );\n        },\n        align: "center",\n        headerAlign: "center",\n        minWidth: 80,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <List>\n      <DataGrid {...dataGridProps} columns={columns} autoHeight />\n    </List>\n  );\n};\n'.trim(),m='\nimport { Stack, Typography } from "@mui/material";\nimport { IResourceComponentsProps, useShow } from "@refinedev/core";\nimport {\n  MarkdownField,\n  NumberField,\n  Show,\n  TextFieldComponent as TextField,\n} from "@refinedev/mui";\n\nexport const ProductShow: React.FC<IResourceComponentsProps> = () => {\n  const { queryResult } = useShow();\n  const { data, isLoading } = queryResult;\n\n  const record = data?.data;\n\n  return (\n    <Show isLoading={isLoading}>\n      <Stack gap={1}>\n        <Typography variant="body1" fontWeight="bold">\n          Id\n        </Typography>\n        <NumberField value={record?.id ?? ""} />\n        <Typography variant="body1" fontWeight="bold">\n          Name\n        </Typography>\n        <TextField value={record?.name} />\n        <Typography variant="body1" fontWeight="bold">\n          Material\n        </Typography>\n        <TextField value={record?.material} />\n        <Typography variant="body1" fontWeight="bold">\n          Description\n        </Typography>\n        <MarkdownField value={record?.description} />\n        <Typography variant="body1" fontWeight="bold">\n          Price\n        </Typography>\n        <NumberField value={record?.price ?? ""} />\n      </Stack>\n    </Show>\n  );\n};\n'.trim();function h(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/chakra-ui":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/inferencer":"latest","@refinedev/react-table":"latest","react-router-dom":"latest","react-router":"latest","@tabler/icons":"^1.119.0","@chakra-ui/react":"^2.5.1"},startRoute:"/my-products",files:{"/App.tsx":{code:f},"/pages/products/list.tsx":{code:g},"/pages/products/show.tsx":{code:v,active:!0}}})}const f='\nimport React from "react";\n\nimport { ChakraProvider } from "@chakra-ui/react";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport {\n  ErrorComponent,\n  RefineThemes,\n  ThemedLayoutV2,\n} from "@refinedev/chakra-ui";\nimport { Refine } from "@refinedev/core";\nimport routerProvider from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nimport { ProductList } from "./pages/products/list.tsx";\nimport { ProductShow } from "./pages/products/show.tsx";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <ChakraProvider theme={RefineThemes.Blue}>\n        <Refine\n          routerProvider={routerProvider}\n          dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n          authProvider={{\n            check: async () => ({ authenticated: true }),\n            getIdentity: async () => ({\n              id: 1,\n              name: "John Doe",\n              avatar: "https://i.pravatar.cc/300",\n            }),\n          }}\n          resources={[\n            {\n              name: "products",\n              list: "/my-products",\n              show: "/my-products/:id",\n            },\n          ]}\n          options={{ syncWithLocation: true }}\n        >\n          <Routes>\n            <Route\n              element={\n                <ThemedLayoutV2>\n                  <Outlet />\n                </ThemedLayoutV2>\n              }\n            >\n              <Route path="/my-products" element={<ProductList />} />\n              <Route path="/my-products/:id" element={<ProductShow />} />\n              <Route path="*" element={<ErrorComponent />} />\n            </Route>\n          </Routes>\n        </Refine>\n      </ChakraProvider>\n    </BrowserRouter>\n  );\n}\n'.trim(),g='\nimport React from "react";\n\nimport {\n  Box,\n  Button,\n  HStack,\n  IconButton,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from "@chakra-ui/react";\nimport { List, ShowButton, usePagination } from "@refinedev/chakra-ui";\nimport { IResourceComponentsProps } from "@refinedev/core";\nimport { useTable } from "@refinedev/react-table";\nimport { IconChevronLeft, IconChevronRight } from "@tabler/icons";\nimport { ColumnDef, flexRender } from "@tanstack/react-table";\n\nexport const ProductList: React.FC<IResourceComponentsProps> = () => {\n  const columns = React.useMemo<ColumnDef<any>[]>(\n    () => [\n      {\n        id: "id",\n        accessorKey: "id",\n        header: "Id",\n      },\n      {\n        id: "name",\n        accessorKey: "name",\n        header: "Name",\n      },\n      {\n        id: "material",\n        accessorKey: "material",\n        header: "Material",\n      },\n\n      {\n        id: "actions",\n        accessorKey: "id",\n        header: "Actions",\n        cell: function render({ getValue }) {\n          return (\n            <HStack>\n              <ShowButton hideText recordItemId={getValue() as string} />\n            </HStack>\n          );\n        },\n      },\n    ],\n    [],\n  );\n\n  const {\n    getHeaderGroups,\n    getRowModel,\n    refineCore: { setCurrent, pageCount, current },\n  } = useTable({\n    columns,\n  });\n\n  return (\n    <List>\n      <TableContainer whiteSpace="pre-line">\n        <Table variant="simple">\n          <Thead>\n            {getHeaderGroups().map((headerGroup) => (\n              <Tr key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                  <Th key={header.id}>\n                    {!header.isPlaceholder &&\n                      flexRender(\n                        header.column.columnDef.header,\n                        header.getContext(),\n                      )}\n                  </Th>\n                ))}\n              </Tr>\n            ))}\n          </Thead>\n          <Tbody>\n            {getRowModel().rows.map((row) => (\n              <Tr key={row.id}>\n                {row.getVisibleCells().map((cell) => (\n                  <Td key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </Td>\n                ))}\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      </TableContainer>\n      <Pagination\n        current={current}\n        pageCount={pageCount}\n        setCurrent={setCurrent}\n      />\n    </List>\n  );\n};\n\ntype PaginationProps = {\n  current: number;\n  pageCount: number;\n  setCurrent: (page: number) => void;\n};\n\nconst Pagination: React.FC<PaginationProps> = ({\n  current,\n  pageCount,\n  setCurrent,\n}) => {\n  const pagination = usePagination({\n    current,\n    pageCount,\n  });\n\n  return (\n    <Box display="flex" justifyContent="flex-end">\n      <HStack my="3" spacing="1">\n        {pagination?.prev && (\n          <IconButton\n            aria-label="previous page"\n            onClick={() => setCurrent(current - 1)}\n            disabled={!pagination?.prev}\n            variant="outline"\n          >\n            <IconChevronLeft size="18" />\n          </IconButton>\n        )}\n\n        {pagination?.items.map((page) => {\n          if (typeof page === "string") return <span key={page}>...</span>;\n\n          return (\n            <Button\n              key={page}\n              onClick={() => setCurrent(page)}\n              variant={page === current ? "solid" : "outline"}\n            >\n              {page}\n            </Button>\n          );\n        })}\n        {pagination?.next && (\n          <IconButton\n            aria-label="next page"\n            onClick={() => setCurrent(current + 1)}\n            variant="outline"\n          >\n            <IconChevronRight size="18" />\n          </IconButton>\n        )}\n      </HStack>\n    </Box>\n  );\n};\n'.trim(),v='\nimport { Heading } from "@chakra-ui/react";\nimport {\n  MarkdownField,\n  NumberField,\n  Show,\n  TextField,\n} from "@refinedev/chakra-ui";\nimport { IResourceComponentsProps, useShow } from "@refinedev/core";\n\nexport const ProductShow: React.FC<IResourceComponentsProps> = () => {\n  const { queryResult } = useShow();\n  const { data, isLoading } = queryResult;\n\n  const record = data?.data;\n\n  return (\n    <Show isLoading={isLoading}>\n      <Heading as="h5" size="sm" mt={4}>\n        Id\n      </Heading>\n      <NumberField value={record?.id ?? ""} />\n      <Heading as="h5" size="sm" mt={4}>\n        Name\n      </Heading>\n      <TextField value={record?.name} />\n      <Heading as="h5" size="sm" mt={4}>\n        Material\n      </Heading>\n      <TextField value={record?.material} />\n      <Heading as="h5" size="sm" mt={4}>\n        Description\n      </Heading>\n      <MarkdownField value={record?.description} />\n      <Heading as="h5" size="sm" mt={4}>\n        Price\n      </Heading>\n      <NumberField value={record?.price ?? ""} />\n    </Show>\n  );\n};\n'.trim();function k(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/mantine":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/inferencer":"latest","@refinedev/react-table":"latest","react-router-dom":"latest","react-router":"latest","@tabler/icons":"^1.119.0","@emotion/react":"^11.8.2","@mantine/core":"^5.10.4","@mantine/hooks":"^5.10.4","@mantine/notifications":"^5.10.4"},startRoute:"/my-products",files:{"/App.tsx":{code:y},"/pages/products/list.tsx":{code:b},"/pages/products/show.tsx":{code:w,active:!0}}})}const y='\nimport React from "react";\n\nimport { Global, MantineProvider } from "@mantine/core";\nimport { NotificationsProvider } from "@mantine/notifications";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport { Refine } from "@refinedev/core";\nimport {\n  ErrorComponent,\n  RefineThemes,\n  ThemedLayoutV2,\n} from "@refinedev/mantine";\nimport routerProvider from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nimport { ProductList } from "./pages/products/list.tsx";\nimport { ProductShow } from "./pages/products/show.tsx";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <MantineProvider\n        theme={RefineThemes.Blue}\n        withNormalizeCSS\n        withGlobalStyles\n      >\n        <Global styles={{ body: { WebkitFontSmoothing: "auto" } }} />\n        <NotificationsProvider position="top-right">\n          <Refine\n            routerProvider={routerProvider}\n            dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n            authProvider={{\n              check: async () => ({ authenticated: true }),\n              getIdentity: async () => ({\n                id: 1,\n                name: "John Doe",\n                avatar: "https://i.pravatar.cc/300",\n              }),\n            }}\n            resources={[\n              {\n                name: "products",\n                list: "/my-products",\n                show: "/my-products/:id",\n              },\n            ]}\n            options={{ syncWithLocation: true }}\n          >\n            <Routes>\n              <Route\n                element={\n                  <ThemedLayoutV2>\n                    <Outlet />\n                  </ThemedLayoutV2>\n                }\n              >\n                <Route path="/my-products" element={<ProductList />} />\n                <Route path="/my-products/:id" element={<ProductShow />} />\n                <Route path="*" element={<ErrorComponent />} />\n              </Route>\n            </Routes>\n          </Refine>\n        </NotificationsProvider>\n      </MantineProvider>\n    </BrowserRouter>\n  );\n}\n'.trim(),b='\nimport { Group, Pagination, ScrollArea, Table } from "@mantine/core";\nimport { IResourceComponentsProps } from "@refinedev/core";\nimport { List, ShowButton } from "@refinedev/mantine";\nimport { useTable } from "@refinedev/react-table";\nimport { ColumnDef, flexRender } from "@tanstack/react-table";\nimport React from "react";\n\nexport const ProductList: React.FC<IResourceComponentsProps> = () => {\n  const columns = React.useMemo<ColumnDef<any>[]>(\n    () => [\n      {\n        id: "id",\n        accessorKey: "id",\n        header: "Id",\n      },\n      {\n        id: "name",\n        accessorKey: "name",\n        header: "Name",\n      },\n\n      {\n        id: "actions",\n        accessorKey: "id",\n        header: "Actions",\n        cell: function render({ getValue }) {\n          return (\n            <Group spacing="xs" noWrap>\n              <ShowButton hideText recordItemId={getValue() as string} />\n            </Group>\n          );\n        },\n      },\n    ],\n    [],\n  );\n\n  const {\n    getHeaderGroups,\n    getRowModel,\n    setOptions,\n    refineCore: {\n      setCurrent,\n      pageCount,\n      current,\n      tableQueryResult: { data: tableData },\n    },\n  } = useTable({\n    columns,\n  });\n\n  return (\n    <List>\n      <ScrollArea>\n        <Table highlightOnHover>\n          <thead>\n            {getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th key={header.id}>\n                      {!header.isPlaceholder &&\n                        flexRender(\n                          header.column.columnDef.header,\n                          header.getContext(),\n                        )}\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {getRowModel().rows.map((row) => {\n              return (\n                <tr key={row.id}>\n                  {row.getVisibleCells().map((cell) => {\n                    return (\n                      <td key={cell.id}>\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext(),\n                        )}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </ScrollArea>\n      <br />\n      <Pagination\n        position="right"\n        total={pageCount}\n        page={current}\n        onChange={setCurrent}\n      />\n    </List>\n  );\n};\n'.trim(),w='\nimport { Title } from "@mantine/core";\nimport { IResourceComponentsProps, useShow } from "@refinedev/core";\nimport {\n  MarkdownField,\n  NumberField,\n  Show,\n  TextField,\n} from "@refinedev/mantine";\n\nexport const ProductShow: React.FC<IResourceComponentsProps> = () => {\n  const { queryResult } = useShow();\n  const { data, isLoading } = queryResult;\n\n  const record = data?.data;\n\n  return (\n    <Show isLoading={isLoading}>\n      <Title my="xs" order={5}>\n        Id\n      </Title>\n      <NumberField value={record?.id ?? ""} />\n      <Title my="xs" order={5}>\n        Name\n      </Title>\n      <TextField value={record?.name} />\n      <Title my="xs" order={5}>\n        Material\n      </Title>\n      <TextField value={record?.material} />\n      <Title mt="xs" order={5}>\n        Description\n      </Title>\n      <MarkdownField value={record?.description} />\n      <Title my="xs" order={5}>\n        Price\n      </Title>\n      <NumberField value={record?.price ?? ""} />\n    </Show>\n  );\n};\n'.trim();function N(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","react-router-dom":"latest","react-router":"latest"},startRoute:"/login",files:{"/App.tsx":{code:x}}})}const x='\nimport React from "react";\n\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\nimport { Refine, AuthPage, Authenticated, ErrorComponent } from "@refinedev/core";\nimport routerProvider, {\n  CatchAllNavigate,\n  NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\n\nexport default function App() {\n  return (\n      <BrowserRouter>\n          <Refine\n              routerProvider={routerProvider}\n              dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n              authProvider={{\n                  check: async () => ({\n                      authenticated: false,\n                      redirectTo: "/login",\n                  }),\n                  login: async () => {\n                      return {\n                          success: false,\n                      };\n                  },\n                  logout: async () => {\n                      return {\n                          success: false,\n                      };\n                  },\n                  onError: async () => ({}),\n                  getIdentity: async () => ({\n                      id: 1,\n                      name: "John Doe",\n                      avatar: "https://i.pravatar.cc/300",\n                  }),\n              }}\n              resources={[\n                  {\n                      name: "dashboard",\n                      list: "/",\n                  },\n              ]}\n          >\n              <Routes>\n                  <Route\n                      element={\n                          <Authenticated\n                              fallback={<CatchAllNavigate to="/login" />}\n                          >\n                              <Outlet />\n                          </Authenticated>\n                      }\n                  >\n                      <Route index element={<div>Welcome!</div>} />\n                  </Route>\n                  <Route\n                      element={\n                          <Authenticated\n                              fallback={\n                                  <div\n                                      style={{\n                                          margin: "24px auto",\n                                          maxWidth: "400px",\n                                      }}\n                                  >\n                                      <Outlet />\n                                  </div>\n                              }\n                          >\n                              <NavigateToResource resource="dashboard" />\n                          </Authenticated>\n                      }\n                  >\n                      <Route\n                          path="/login"\n                          element={<AuthPage type="login" />}\n                      />\n                      <Route\n                          path="/register"\n                          element={<AuthPage type="register" />}\n                      />\n                      <Route\n                          path="/forgot-password"\n                          element={<AuthPage type="forgotPassword" />}\n                      />\n                      <Route\n                          path="/update-password"\n                          element={<AuthPage type="updatePassword" />}\n                      />\n                  </Route>\n                  <Route\n                      element={\n                          <Authenticated>\n                              <Outlet />\n                          </Authenticated>\n                      }\n                  >\n                      <Route path="*" element={<ErrorComponent />} />\n                  </Route>\n              </Routes>\n          </Refine>\n      </BrowserRouter>\n  );\n}\n'.trim();function R(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/antd":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","react-router-dom":"latest","react-router":"latest",antd:"^5.0.5"},startRoute:"/login",files:{"/App.tsx":{code:P}}})}const P='\nimport React from "react";\n\nimport "@refinedev/antd/dist/reset.css";\nimport { App as AntdApp, ConfigProvider } from "antd";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport {\n    AuthPage,\n    ErrorComponent,\n    RefineThemes,\n    ThemedLayoutV2,\n} from "@refinedev/antd";\nimport { Authenticated, Refine } from "@refinedev/core";\nimport routerProvider, {\n    CatchAllNavigate,\n    NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <ConfigProvider theme={RefineThemes.Blue}>\n                <AntdApp>\n                    <Refine\n                        routerProvider={routerProvider}\n                        dataProvider={dataProvider(\n                            "https://api.fake-rest.refine.dev",\n                        )}\n                        authProvider={{\n                            check: async () => ({\n                                authenticated: false,\n                                redirectTo: "/login",\n                            }),\n                            login: async () => {\n                                return {\n                                    success: false,\n                                };\n                            },\n                            logout: async () => {\n                                return {\n                                    success: false,\n                                };\n                            },\n                            onError: async () => ({}),\n                            getIdentity: async () => ({\n                                id: 1,\n                                name: "John Doe",\n                                avatar: "https://i.pravatar.cc/300",\n                            }),\n                        }}\n                        resources={[\n                            {\n                                name: "dashboard",\n                                list: "/",\n                            },\n                        ]}\n                        options={{ syncWithLocation: true }}\n                    >\n                        <Routes>\n                            <Route\n                                element={\n                                    <Authenticated\n                                        fallback={\n                                            <CatchAllNavigate to="/login" />\n                                        }\n                                    >\n                                        <ThemedLayoutV2>\n                                            <Outlet />\n                                        </ThemedLayoutV2>\n                                    </Authenticated>\n                                }\n                            >\n                                <Route index element={<div>Welcome!</div>} />\n                            </Route>\n                            <Route\n                                element={\n                                    <Authenticated fallback={<Outlet />}>\n                                        <NavigateToResource resource="dashboard" />\n                                    </Authenticated>\n                                }\n                            >\n                                <Route\n                                    path="/login"\n                                    element={\n                                        <AuthPage\n                                            type="login"\n                                            wrapperProps={{\n                                                style: {\n                                                    paddingTop: 24,\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/register"\n                                    element={\n                                        <AuthPage\n                                            type="register"\n                                            wrapperProps={{\n                                                style: {\n                                                    paddingTop: 24,\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/forgot-password"\n                                    element={\n                                        <AuthPage\n                                            type="forgotPassword"\n                                            wrapperProps={{\n                                                style: {\n                                                    paddingTop: 24,\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/update-password"\n                                    element={\n                                        <AuthPage\n                                            type="updatePassword"\n                                            wrapperProps={{\n                                                style: {\n                                                    paddingTop: 24,\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                            </Route>\n                            <Route\n                                element={\n                                    <Authenticated>\n                                        <ThemedLayoutV2>\n                                            <Outlet />\n                                        </ThemedLayoutV2>\n                                    </Authenticated>\n                                }\n                            >\n                                <Route path="*" element={<ErrorComponent />} />\n                            </Route>\n                        </Routes>\n                    </Refine>\n                </AntdApp>\n            </ConfigProvider>\n        </BrowserRouter>\n    );\n}\n'.trim();function C(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/antd":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/mui":"latest","react-router-dom":"latest","react-router":"latest","@emotion/react":"^11.8.2","@emotion/styled":"^11.8.1","@mui/lab":"^5.0.0-alpha.85","@mui/material":"^5.14.2","@mui/x-data-grid":"^6.6.0"},startRoute:"/login",files:{"/App.tsx":{code:T}}})}const T='\nimport React from "react";\n\nimport CssBaseline from "@mui/material/CssBaseline";\nimport GlobalStyles from "@mui/material/GlobalStyles";\nimport { ThemeProvider } from "@mui/material/styles";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport { Authenticated, Refine } from "@refinedev/core";\nimport {\n    AuthPage,\n    ErrorComponent,\n    RefineThemes,\n    ThemedLayoutV2,\n} from "@refinedev/mui";\nimport routerProvider, {\n    CatchAllNavigate,\n    NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <ThemeProvider theme={RefineThemes.Blue}>\n                <CssBaseline />\n                <GlobalStyles\n                    styles={{ html: { WebkitFontSmoothing: "auto" } }}\n                />\n                <Refine\n                    routerProvider={routerProvider}\n                    dataProvider={dataProvider(\n                        "https://api.fake-rest.refine.dev",\n                    )}\n                    authProvider={{\n                        check: async () => ({\n                            authenticated: false,\n                            redirectTo: "/login",\n                        }),\n                        login: async () => {\n                            return {\n                                success: false,\n                            };\n                        },\n                        logout: async () => {\n                            return {\n                                success: false,\n                            };\n                        },\n                        onError: async () => ({}),\n                        getIdentity: async () => ({\n                            id: 1,\n                            name: "John Doe",\n                            avatar: "https://i.pravatar.cc/300",\n                        }),\n                    }}\n                    resources={[\n                        {\n                            name: "dashboard",\n                            list: "/",\n                        },\n                    ]}\n                    options={{ syncWithLocation: true }}\n                >\n                    <Routes>\n                        <Route\n                            element={\n                                <Authenticated\n                                    fallback={<CatchAllNavigate to="/login" />}\n                                >\n                                    <ThemedLayoutV2>\n                                        <Outlet />\n                                    </ThemedLayoutV2>\n                                </Authenticated>\n                            }\n                        >\n                            <Route\n                                path="/dashboard"\n                                element={<div>Welcome</div>}\n                            />\n                        </Route>\n                        <Route\n                            element={\n                                <Authenticated fallback={<Outlet />}>\n                                    <NavigateToResource resource="dashboard" />\n                                </Authenticated>\n                            }\n                        >\n                            <Route\n                                path="/login"\n                                element={\n                                    <AuthPage\n                                        type="login"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "72px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/register"\n                                element={\n                                    <AuthPage\n                                        type="register"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "72px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/forgot-password"\n                                element={\n                                    <AuthPage\n                                        type="forgotPassword"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "72px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/update-password"\n                                element={\n                                    <AuthPage\n                                        type="updatePassword"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "72px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                        </Route>\n                        <Route\n                            element={\n                                <Authenticated>\n                                    <ThemedLayoutV2>\n                                        <Outlet />\n                                    </ThemedLayoutV2>\n                                </Authenticated>\n                            }\n                        >\n                            <Route path="*" element={<ErrorComponent />} />\n                        </Route>\n                    </Routes>\n                </Refine>\n            </ThemeProvider>\n        </BrowserRouter>\n    );\n}\n\n'.trim();function A(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/chakra-ui":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/react-table":"latest","react-router-dom":"latest","react-router":"latest","@tabler/icons":"^1.119.0","@chakra-ui/react":"^2.5.1"},startRoute:"/login",files:{"/App.tsx":{code:I}}})}const I='import React from "react";\n\nimport { ChakraProvider } from "@chakra-ui/react";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport {\n    AuthPage,\n    ErrorComponent,\n    RefineThemes,\n    ThemedLayoutV2,\n} from "@refinedev/chakra-ui";\nimport { Authenticated, Refine } from "@refinedev/core";\nimport routerProvider, {\n    CatchAllNavigate,\n    NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <ChakraProvider theme={RefineThemes.Blue}>\n                <Refine\n                    routerProvider={routerProvider}\n                    dataProvider={dataProvider(\n                        "https://api.fake-rest.refine.dev",\n                    )}\n                    authProvider={{\n                        check: async () => ({\n                            authenticated: false,\n                            redirectTo: "/login",\n                        }),\n                        login: async () => {\n                            return {\n                                success: false,\n                            };\n                        },\n                        logout: async () => {\n                            return {\n                                success: false,\n                            };\n                        },\n                        onError: async () => ({}),\n                        getIdentity: async () => ({\n                            id: 1,\n                            name: "John Doe",\n                            avatar: "https://i.pravatar.cc/300",\n                        }),\n                    }}\n                    resources={[\n                        {\n                            name: "dashboard",\n                            list: "/",\n                        },\n                    ]}\n                    options={{ syncWithLocation: true }}\n                >\n                    <Routes>\n                        <Route\n                            element={\n                                <Authenticated\n                                    fallback={<CatchAllNavigate to="/login" />}\n                                >\n                                    <ThemedLayoutV2>\n                                        <Outlet />\n                                    </ThemedLayoutV2>\n                                </Authenticated>\n                            }\n                        >\n                            <Route index element={<div>Welcome!</div>} />\n                        </Route>\n                        <Route\n                            element={\n                                <Authenticated fallback={<Outlet />}>\n                                    <NavigateToResource resource="dashboard" />\n                                </Authenticated>\n                            }\n                        >\n                            <Route\n                                path="/login"\n                                element={\n                                    <AuthPage\n                                        type="login"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "24px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/register"\n                                element={\n                                    <AuthPage\n                                        type="register"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "24px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/forgot-password"\n                                element={\n                                    <AuthPage\n                                        type="forgotPassword"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "24px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/update-password"\n                                element={\n                                    <AuthPage\n                                        type="updatePassword"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "24px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                        </Route>\n                        <Route\n                            element={\n                                <Authenticated>\n                                    <ThemedLayoutV2>\n                                        <Outlet />\n                                    </ThemedLayoutV2>\n                                </Authenticated>\n                            }\n                        >\n                            <Route path="*" element={<ErrorComponent />} />\n                        </Route>\n                    </Routes>\n                </Refine>\n            </ChakraProvider>\n        </BrowserRouter>\n    );\n}\n'.trim();function L(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/mantine":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/react-table":"latest","react-router-dom":"latest","react-router":"latest","@mantine/core":"^5.10.4"},startRoute:"/login",files:{"/App.tsx":{code:O}}})}const O='\nimport React from "react";\n\nimport { Global, MantineProvider } from "@mantine/core";\nimport { NotificationsProvider } from "@mantine/notifications";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport { Authenticated, Refine } from "@refinedev/core";\nimport {\n    AuthPage,\n    ErrorComponent,\n    RefineThemes,\n    ThemedLayoutV2,\n} from "@refinedev/mantine";\nimport routerProvider, {\n    CatchAllNavigate,\n    NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <MantineProvider\n                theme={RefineThemes.Blue}\n                withNormalizeCSS\n                withGlobalStyles\n            >\n                <Global styles={{ body: { WebkitFontSmoothing: "auto" } }} />\n                <NotificationsProvider position="top-right">\n                    <Refine\n                        routerProvider={routerProvider}\n                        dataProvider={dataProvider(\n                            "https://api.fake-rest.refine.dev",\n                        )}\n                        authProvider={{\n                            check: async () => ({\n                                authenticated: false,\n                                redirectTo: "/login",\n                            }),\n                            login: async () => {\n                                return {\n                                    success: false,\n                                };\n                            },\n                            logout: async () => {\n                                return {\n                                    success: false,\n                                };\n                            },\n                            onError: async () => ({}),\n                            getIdentity: async () => ({\n                                id: 1,\n                                name: "John Doe",\n                                avatar: "https://i.pravatar.cc/300",\n                            }),\n                        }}\n                        resources={[\n                            {\n                                name: "dashboard",\n                                list: "/",\n                            },\n                        ]}\n                        options={{ syncWithLocation: true }}\n                    >\n                        <Routes>\n                            <Route\n                                element={\n                                    <Authenticated\n                                        fallback={\n                                            <CatchAllNavigate to="/login" />\n                                        }\n                                    >\n                                        <ThemedLayoutV2>\n                                            <Outlet />\n                                        </ThemedLayoutV2>\n                                    </Authenticated>\n                                }\n                            >\n                                <Route index element={<div>Welcome</div>} />\n                            </Route>\n                            <Route\n                                element={\n                                    <Authenticated fallback={<Outlet />}>\n                                        <NavigateToResource resource="dashboard" />\n                                    </Authenticated>\n                                }\n                            >\n                                <Route\n                                    path="/login"\n                                    element={\n                                        <AuthPage\n                                            type="login"\n                                            wrapperProps={{\n                                                style: {\n                                                    display: "flex",\n                                                    flexDirection: "column",\n                                                    alignItems: "center",\n                                                    justifyContent: "center",\n                                                    minHeight: "100vh",\n                                                    margin: "24px auto",\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/register"\n                                    element={\n                                        <AuthPage\n                                            type="register"\n                                            wrapperProps={{\n                                                style: {\n                                                    display: "flex",\n                                                    flexDirection: "column",\n                                                    alignItems: "center",\n                                                    justifyContent: "center",\n                                                    minHeight: "100vh",\n                                                    margin: "24px auto",\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/forgot-password"\n                                    element={\n                                        <AuthPage\n                                            type="forgotPassword"\n                                            wrapperProps={{\n                                                style: {\n                                                    display: "flex",\n                                                    flexDirection: "column",\n                                                    alignItems: "center",\n                                                    justifyContent: "center",\n                                                    minHeight: "100vh",\n                                                    margin: "24px auto",\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/update-password"\n                                    element={\n                                        <AuthPage\n                                            type="updatePassword"\n                                            wrapperProps={{\n                                                style: {\n                                                    display: "flex",\n                                                    flexDirection: "column",\n                                                    alignItems: "center",\n                                                    justifyContent: "center",\n                                                    minHeight: "100vh",\n                                                    margin: "24px auto",\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                            </Route>\n                            <Route\n                                element={\n                                    <Authenticated>\n                                        <ThemedLayoutV2>\n                                            <Outlet />\n                                        </ThemedLayoutV2>\n                                    </Authenticated>\n                                }\n                            >\n                                <Route path="*" element={<ErrorComponent />} />\n                            </Route>\n                        </Routes>\n                    </Refine>\n                </NotificationsProvider>\n            </MantineProvider>\n        </BrowserRouter>\n    );\n}\n'.trim();function S(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function E(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function B(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const D={title:"General Concepts"},M=void 0,j={unversionedId:"guides-concepts/general-concepts/index",id:"guides-concepts/general-concepts/index",title:"General Concepts",description:"Refine is an extensible framework designed for rapidly building web applications. It offers a modern, hook-based architecture, a pluggable system of providers, and a robust state management solution. This section provides an overview of the key concepts in Refine.",source:"@site/docs/guides-concepts/general-concepts/index.md",sourceDirName:"guides-concepts/general-concepts",slug:"/guides-concepts/general-concepts/",permalink:"/docs/guides-concepts/general-concepts/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/guides-concepts/general-concepts/index.md",tags:[],version:"current",lastUpdatedBy:"Necati \xd6zmen",lastUpdatedAt:1700642727,formattedLastUpdatedAt:"Nov 22, 2023",frontMatter:{title:"General Concepts"},sidebar:"someSidebar",previous:{title:"1. Build your first refine app",permalink:"/docs/tutorial/introduction/index"},next:{title:"Data Fetching",permalink:"/docs/guides-concepts/data-fetching/"}},F={},U=[{value:"Resource Concept",id:"resource-concept",level:2},{value:"Provider Concept",id:"provider-concept",level:2},{value:"Hook Concept",id:"hook-concept",level:2},{value:"Providers",id:"providers",level:2},{value:"Data Provider",id:"data-provider",level:3},{value:"Hooks",id:"hooks",level:4},{value:"Authentication Provider",id:"authentication-provider",level:3},{value:"Components",id:"components",level:4},{value:"Hooks",id:"hooks-1",level:4},{value:"UI Integrations",id:"ui-integrations",level:4},{value:"Access Control Provider",id:"access-control-provider",level:3},{value:"Components",id:"components-1",level:4},{value:"Hooks",id:"hooks-2",level:4},{value:"UI Integrations",id:"ui-integrations-1",level:4},{value:"Notification Provider",id:"notification-provider",level:3},{value:"Hooks",id:"hooks-3",level:4},{value:"I18n Provider",id:"i18n-provider",level:3},{value:"Hooks",id:"hooks-4",level:4},{value:"UI Integrations",id:"ui-integrations-2",level:4},{value:"Router Provider",id:"router-provider",level:3},{value:"Components",id:"components-2",level:4},{value:"Hooks",id:"hooks-5",level:4},{value:"UI Integrations",id:"ui-integrations-3",level:2},{value:"Layout",id:"layout",level:3},{value:"CRUD Pages",id:"crud-pages",level:3},{value:"Buttons",id:"buttons",level:3},{value:"Auth Pages",id:"auth-pages",level:3},{value:"UI Integration Hooks",id:"ui-integration-hooks",level:3},{value:"Meta Concept",id:"meta-concept",level:2},{value:"Example Use Cases",id:"example-use-cases",level:3},{value:"State Management",id:"state-management",level:2},{value:"Developer Experience",id:"developer-experience",level:2},{value:"CLI",id:"cli",level:3},{value:"Devtools",id:"devtools",level:3},{value:"Inferencer",id:"inferencer",level:3}],H=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},z=H("Tabs"),G=H("TabItem"),q={toc:U};function W(e){var{components:n}=e,t=B(e,["components"]);return(0,o.kt)("wrapper",E(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){S(e,n,t[n])}))}return e}({},q,t),{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Refine is an extensible framework designed for rapidly building web applications. It offers a modern, ",(0,o.kt)("strong",{parentName:"p"},"hook-based architecture"),", a ",(0,o.kt)("strong",{parentName:"p"},"pluggable system of providers"),", and a robust ",(0,o.kt)("strong",{parentName:"p"},"state management")," solution. This section provides an overview of the key concepts in Refine."),(0,o.kt)("h2",{id:"resource-concept"},"Resource Concept"),(0,o.kt)("p",null,"In Refine, a ",(0,o.kt)("strong",{parentName:"p"},"resource")," is a central concept representing an ",(0,o.kt)("strong",{parentName:"p"},"entity"),", which ties together various aspects of your application."),(0,o.kt)("p",null,"They typically refers to a data entity, like ",(0,o.kt)("inlineCode",{parentName:"p"},"products"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"blogPosts"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"orders"),"."),(0,o.kt)("p",null,"Resource definitions allows you to manage your application in a structured way, abstracting complex operations into simpler actions through various ",(0,o.kt)("strong",{parentName:"p"},"providers")," and ",(0,o.kt)("strong",{parentName:"p"},"UI integrations"),"."),(0,o.kt)("p",null,"A typical resource definition looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=App.tsx",title:"App.tsx"},'import { Refine } from "@refinedev/core";\n\nexport const App = () => {\n  return (\n    <Refine\n      resources={[\n        {\n          name: "products",\n          list: "/my-products",\n          show: "/my-products/:id",\n          edit: "/my-products/:id/edit",\n          create: "/my-products/new",\n        },\n      ]}\n    >\n      {/* ... */}\n    </Refine>\n  );\n};\n')),(0,o.kt)("h2",{id:"provider-concept"},"Provider Concept"),(0,o.kt)("p",null,"Providers are the building blocks of Refine, used to manage different aspects of your application, such as data fetching, routing, access control, and more."),(0,o.kt)("p",null,"They are pluggable, which means you can use the ",(0,o.kt)("strong",{parentName:"p"},"built-in providers")," or ",(0,o.kt)("strong",{parentName:"p"},"create your own"),". This allows you to customize the behavior of your application to suit your needs."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Data Provider"),": Communication with the backend data source, handling data operations such as fetching, creating, updating, deleting records, caching, and invalidation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Authentication Provider"),": Manages user authentication and authorization processes. Handles redirection, error cases."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Access Control Provider"),": Handles authorization and access control. Used to hide/disable buttons and menu items, or to protect routes and components."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Notification Provider"),": Enables notification features like showing notification after successful mutations or errors."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"I18n Provider"),": Enables i18n features such as renderin translated menu items, button texts, table columns, page titles, and more."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Live Provider"),": Enables real-time updates to your application. For example, when a user creates a new record, other users can see the new record in the list page without refreshing the page."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Router Provider"),": Matches routes to resources, enables navigation features like breadcrumbs, automatic redirections after CRUD operations, rendering menu items.")),(0,o.kt)("h2",{id:"hook-concept"},"Hook Concept"),(0,o.kt)("p",null,"refine adopts a hook-based architecture, a modern and powerful pattern in React development, which significantly enhances the development experience and application performance."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine"),"'s hooks are ",(0,o.kt)("strong",{parentName:"p"},"headless"),", which means they are library agnostic, provides ",(0,o.kt)("strong",{parentName:"p"},"a unified interface")," for your needs regardless of your library or framework of your choice."),(0,o.kt)("p",null,"For example, we have different built-in router providers for ",(0,o.kt)("strong",{parentName:"p"},"React Router v6"),", ",(0,o.kt)("strong",{parentName:"p"},"Next.js"),", ",(0,o.kt)("strong",{parentName:"p"},"Remix"),", ",(0,o.kt)("strong",{parentName:"p"},"Expo")," that handles routing in your application."),(0,o.kt)("p",null,"But we have a single ",(0,o.kt)("inlineCode",{parentName:"p"},"useGo")," hook, exported from ",(0,o.kt)("inlineCode",{parentName:"p"},"@refinedev/core")," package, can be used to navigate to a specific resource's page in your application ",(0,o.kt)("strong",{parentName:"p"},"regardless of your routing solution"),"."),(0,o.kt)("p",null,"This is just one example, we have many other hooks for data fetching, authentication, access control, notifications, i18n and more."),(0,o.kt)("p",null,"They are all ",(0,o.kt)("strong",{parentName:"p"},"headless"),", ",(0,o.kt)("strong",{parentName:"p"},"library agnostic"),", and ",(0,o.kt)("strong",{parentName:"p"},"unified"),"."),(0,o.kt)("p",null,"You might be using ",(0,o.kt)("a",{parentName:"p",href:"https://casbin.org"},"Casbin")," or ",(0,o.kt)("a",{parentName:"p",href:"https://cerbos.dev"},"Cerbos")," for authorization, we have a single ",(0,o.kt)("inlineCode",{parentName:"p"},"useCan")," hook to control access in your components."),(0,o.kt)("p",null,"Or you may prefer either ",(0,o.kt)("inlineCode",{parentName:"p"},"next-i18next")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"react-i18next")," for i18n, we have a single ",(0,o.kt)("inlineCode",{parentName:"p"},"useTranslate")," hook to handle translation."),(0,o.kt)("h2",{id:"providers"},"Providers"),(0,o.kt)("h3",{id:"data-provider"},"Data Provider"),(0,o.kt)("p",null,"The Data Provider is the bridge between your frontend and your backend data source. It is responsible for handling all data-related operations such as fetching, caching, creating, updating, and deleting records."),(0,o.kt)("p",null,"Each data operation in the Data Provider is typically associated with a specific resource. For example, when fetching data for a ",(0,o.kt)("inlineCode",{parentName:"p"},"products")," resource, the Data Provider will know which endpoint to hit and how to handle the response."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=data-provider.ts",title:"data-provider.ts"},'import { DataProvider } from "@refinedev/core";\n\nconst myDataProvider: DataProvider = {\n  getOne: ({ resource, id }) => {\n    fetch(`https://example.com/api/v1/${resource}/${id}`);\n  },\n  // other methods...\n};\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Refine offers various built-in data providers for popular data sources like REST, Strapi, AirTable, Supabase, GraphQL, and more. See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/providers/data-provider"},"Data Providers")," page for more information.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/data-fetching/"},"Data Fetching")," guide for more information.")),(0,o.kt)("h4",{id:"hooks"},"Hooks"),(0,o.kt)("p",null,"You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"useList"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useOne"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useCreate"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useEdit"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useShow")," hooks to fetch data in your components."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=show.tsx",title:"show.tsx"},'import { useOne } from "@refinedev/core";\n\nexport const ShowPage = () => {\n  const { data, isLoading } = useOne({ resource: "products", id: 1 });\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  return <>{data.name}</>;\n};\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/data-fetching"},"Data Fetching")," guide for more information.")),(0,o.kt)("h3",{id:"authentication-provider"},"Authentication Provider"),(0,o.kt)("p",null,"The Authentication Provider centralizes the authentication and authorization processes in ",(0,o.kt)("strong",{parentName:"p"},"refine")," applications."),(0,o.kt)("p",null,"It handles authentication and authorization processes such as login, logout, redirection, error handling, and more."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=auth-provider.ts",title:"auth-provider.ts"},'import { AuthBindings } from "@refinedev/core\'";\n\nexport const authProvider: AuthBindings = {\n  login: async ({ email, password }) => {\n    const { status } = handleLogin(email, password);\n\n    if (status === 200) {\n      return { success: true, redirectTo: "/dashboard" };\n    } else {\n      return {\n        success: false,\n        error: { name: "Login Error", message: "Invalid credentials" },\n      };\n    }\n  },\n  check: async (params) => ({}),\n  logout: async (params) => ({}),\n  onError: async (params) => ({}),\n  register: async (params) => ({}),\n  forgotPassword: async (params) => ({}),\n  updatePassword: async (params) => ({}),\n  getPermissions: async (params) => ({}),\n  getIdentity: async (params) => ({}),\n};\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/authentication/"},"Authentication")," guide for more information.")),(0,o.kt)("h4",{id:"components"},"Components"),(0,o.kt)("p",null,"You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"Authenticated")," component from ",(0,o.kt)("inlineCode",{parentName:"p"},"@refinedev/core")," to protect your routes, components with authentication."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=my-page.tsx",title:"my-page.tsx"},'import { Authenticated } from "@refinedev/core";\n\nconst MyPage = () => (\n  <Authenticated>\n    <YourComponent />\n  </Authenticated>\n);\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/authentication#components"},"Authentication Components")," page for more information.")),(0,o.kt)("h4",{id:"hooks-1"},"Hooks"),(0,o.kt)("p",null,"You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"useGetIdentity")," hook to get current user."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=show.tsx",title:"show.tsx"},'import { useGetIdentity } from "@refinedev/core";\n\nexport const DashboardPage = () => {\n  const {\n    data: { name },\n  } = useGetIdentity();\n\n  return <>Welcome {name}!</>;\n};\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/authentication#hooks"},"Authentication Hooks")," page for more information.")),(0,o.kt)("h4",{id:"ui-integrations"},"UI Integrations"),(0,o.kt)("p",null,"We have pre-built components which works with Auth Provider out-of-the-box."),(0,o.kt)("p",null,"When provided, their Layout components can automatically render current user information on the header and add logout button to appropriate places."),(0,o.kt)("p",null,"You can also use ",(0,o.kt)("inlineCode",{parentName:"p"},"AuthPage")," component of these integrations for ",(0,o.kt)("inlineCode",{parentName:"p"},"Login"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Register"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Forgot Password"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Reset Password")," pages."),(0,o.kt)("p",null,"See the ",(0,o.kt)("a",{parentName:"p",href:"#auth-pages"},"Auth Pages")," section below for live examples."),(0,o.kt)("h3",{id:"access-control-provider"},"Access Control Provider"),(0,o.kt)("p",null,"The Access Control Provider manages what users can access or perform within the application based on their permissions."),(0,o.kt)("p",null,"It uses the resource definition to determine access rights. For instance, it can decide whether a user can edit or delete record for ",(0,o.kt)("inlineCode",{parentName:"p"},"products")," resource based on the resource definition."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=App.tsx",title:"App.tsx"},'import { AccessControlProvider, Refine } from "@refinedev/core";\n\nconst myAccessControlProvider: AccessControlProvider = {\n  can: async ({ resource, action }) => {\n    if (resource === "products" && action === "delete") {\n      return { can: false };\n    }\n\n    return { can: true };\n  },\n};\n\nexport const App = () => {\n  return <Refine accessControlProvider={myAccessControlProvider}>{/* ... */}</Refine>;\n};\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/authorization/"},"Authorization")," guide for more information.")),(0,o.kt)("h4",{id:"components-1"},"Components"),(0,o.kt)("p",null,"You can wrap ",(0,o.kt)("inlineCode",{parentName:"p"},"CanAccess")," component to wrap relevant parts of your application to control access."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=show-page.tsx",title:"show-page.tsx"},'import { CanAccess } from "@refinedev/core";\n\nexport const ShowPage = () => {\n  return (\n    <CanAccess resource="users" action="show">\n      <>\n        User Page\n        <CanAccess resource="users" action="block">\n          // Only authorized users can see this.\n          <BlockUserButton />\n        </CanAccess>\n      </>\n    </CanAccess>\n  );\n};\n')),(0,o.kt)("h4",{id:"hooks-2"},"Hooks"),(0,o.kt)("p",null,"You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"useCan")," hook to control access in your components."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=show.tsx",title:"show.tsx"},'import { ErrorComponent, useCan } from "@refinedev/core";\n\nexport const ShowPage = () => {\n  const { data: show } = useCan({ resource: "users", action: "show" });\n  const { data: block } = useCan({ resource: "users", action: "block" });\n\n  if (!show?.can) {\n    return <ErrorComponent />;\n  }\n\n  return (\n    <>\n      User Details Page\n      {block?.can && <BlockUserButton />}\n    </>\n  );\n};\n')),(0,o.kt)("h4",{id:"ui-integrations-1"},"UI Integrations"),(0,o.kt)("p",null,"When provided, our UI Integrations works out-of-the-box with Access Control Provider."),(0,o.kt)("p",null,"For example if user isn't authorized to see ",(0,o.kt)("inlineCode",{parentName:"p"},"orders")," resource, it will be hidden on the sidebar menu automatically."),(0,o.kt)("p",null,"Or if the current user isn't authorized to delete a product, the delete button will be disabled or hidden automatically."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=example.tsx",title:"example.tsx"},'import { DeleteButton } from "@refinedev/antd"; // or @refinedev/mui, @refinedev/chakra-ui, @refinedev/mantine\n\nexport const ShowPage = () => {\n  return (\n    <>\n      Product Details Page\n      <DeleteButton /> // Only admins can see this.\n    </>\n  );\n};\n')),(0,o.kt)("p",null,"This applies to all buttons like ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateButton"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"EditButton"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ShowButton"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ListButton"),"."),(0,o.kt)("h3",{id:"notification-provider"},"Notification Provider"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," can automatically show notifications for CRUD operations and errors."),(0,o.kt)("p",null,"For example, after creating, updating, or deleting a record for ",(0,o.kt)("inlineCode",{parentName:"p"},"products")," resource, or when an error occurs on form submission."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," has out-of-the-box notification providers for popular UI libraries like ",(0,o.kt)("strong",{parentName:"p"},"Ant Design"),", ",(0,o.kt)("strong",{parentName:"p"},"Material UI"),", ",(0,o.kt)("strong",{parentName:"p"},"Chakra UI"),", and ",(0,o.kt)("strong",{parentName:"p"},"Mantine"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/notification-provider"},"Notifications")," guide for more information.")),(0,o.kt)("h4",{id:"hooks-3"},"Hooks"),(0,o.kt)("p",null,"Our ",(0,o.kt)("strong",{parentName:"p"},"data hooks"),", ",(0,o.kt)("strong",{parentName:"p"},"mutation hooks"),", and ",(0,o.kt)("strong",{parentName:"p"},"auth hooks")," can automatically show notifications for actions and errors."),(0,o.kt)("p",null,"It's also possible to modify these notifications per hook."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=show.tsx",title:"show.tsx"},'import { useDelete } from "@refinedev/core";\n\nexport const ShowPage = () => {\n  const { mutate } = useDelete({ resource: "products" });\n\n  return (\n    <Button\n      onClick={() => {\n        mutate({\n          successNotification: () => ({\n            message: "Product Deleted",\n            description: "Product has been deleted successfully.",\n            type: "success",\n          }),\n          errorNotification: () => ({\n            message: "Product Delete Error",\n            description: "An error occurred while deleting the product.",\n            type: "error",\n          }),\n        });\n      }}\n    >\n      Delete Product\n    </Button>\n  );\n};\n')),(0,o.kt)("p",null,"If you have a use-case that isn't covered, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"useNotification")," hook to show notifications in your application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=show.tsx",title:"show.tsx"},'import { useNotification } from "@refinedev/core";\n\nexport const ShowPage = () => {\n  const { open, close } = useNotification();\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          open?.({\n            key: "my-notification",\n            message: "Test Notification",\n            description: "This is a test notification.",\n            type: "success", // success | error | progress\n          });\n        }}\n      >\n        Show notification\n      </Button>\n      <Button\n        onClick={() => {\n          close?.("my-notification");\n        }}\n      >\n        Close Notification\n      </Button>\n    </>\n  );\n};\n')),(0,o.kt)("h3",{id:"i18n-provider"},"I18n Provider"),(0,o.kt)("p",null,"I18n provider centralizes localization process in ",(0,o.kt)("strong",{parentName:"p"},"refine")," applications."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=App.tsx",title:"App.tsx"},'import { Refine, I18nProvider } from "@refinedev/core";\n\nconst i18nProvider: I18nProvider = {\n    translate: (key: string, options?: any, defaultMessage?: string) => string,\n    changeLocale: (lang: string, options?: any) => Promise,\n    getLocale: () => string,\n};\n\nexport const App = () => {\n  return (\n    <Refine i18nProvider={i18nProvider} {/* ...*/}>\n      {/* ... */}\n    </Refine>\n  )\n}\n')),(0,o.kt)("h4",{id:"hooks-4"},"Hooks"),(0,o.kt)("p",null,"You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"useTranslate"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useSetLocale"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useGetLocale")," hooks to handle i18n in your components."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=show.tsx",title:"show.tsx"},'import { useTranslate, useSetLocale, useGetLocale } from "@refinedev/core";\n\nexport const ShowPage = () => {\n  const translate = useTranslate();\n  const setLocale = useSetLocale();\n  const getLocale = useGetLocale();\n\n  return (\n    <>\n      Current Locale: {getLocale()}\n      <Button onClick={() => setLocale("en")}>Set Locale to English</Button>\n      <Button onClick={() => setLocale("de")}>Set Locale to German</Button>\n\n      <Button>{translate(\'Hello\')</Button>\n    </>\n  );\n};\n\n')),(0,o.kt)("h4",{id:"ui-integrations-2"},"UI Integrations"),(0,o.kt)("p",null,"When provided, our UI Integrations works out-of-the-box with I18n Provider."),(0,o.kt)("p",null,"For example, it will automatically translate menu items, button texts, table columns, page titles, and more."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/i18n-provider/"},"Internationalization")," guide for more information.")),(0,o.kt)("h3",{id:"router-provider"},"Router Provider"),(0,o.kt)("p",null,"Router provider helps ",(0,o.kt)("strong",{parentName:"p"},"refine")," understand the relationship between resources and routes. Enables navigation features like breadcrumbs, automatic redirections after CRUD operations, rendering menu items, inferring hook parameters, and more."),(0,o.kt)("p",null,"We have built-in router integrations for the following packages:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"React Router v6"),(0,o.kt)("li",{parentName:"ul"},"Next.js"),(0,o.kt)("li",{parentName:"ul"},"Remix"),(0,o.kt)("li",{parentName:"ul"},"Expo Router (React Native)")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/routing/"},"Routing")," guide for more information.")),(0,o.kt)("h4",{id:"components-2"},"Components"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"UI Integration")," components can infer resource information from the current URL."),(0,o.kt)("p",null,"For example, we are in the list page of ",(0,o.kt)("inlineCode",{parentName:"p"},"products")," resource, we have ",(0,o.kt)("inlineCode",{parentName:"p"},"List")," layout component and we are adding ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateButton")," from one of our UI Integrations to redirect user to the create page of the resource."),(0,o.kt)("p",null,"With ",(0,o.kt)("strong",{parentName:"p"},"router provider")," current resource information will be inferred from the current URL."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=products.tsx",title:"products.tsx"},'import { List, CreateButton } from "@refinedev/antd"; // or @refinedev/mui, @refinedev/chakra-ui, @refinedev/mantine\n\nexport const ProductsListPage = () => {\n  return (\n    // Instead of <List resource="products">\n    <List>\n      {/* Instead of <CreateButton resource="products" /> */}\n      <CreateButton /> // Redirects to /products/new\n    </List>\n  );\n};\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/routing/"},"Routing")," guide for more information.")),(0,o.kt)("h4",{id:"hooks-5"},"Hooks"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," hooks can synchronize ",(0,o.kt)("strong",{parentName:"p"},"resource"),", ",(0,o.kt)("strong",{parentName:"p"},"id"),", ",(0,o.kt)("strong",{parentName:"p"},"action")," parameters from the current URL eliminates the need to pass them manually."),(0,o.kt)("p",null,"For example, ",(0,o.kt)("inlineCode",{parentName:"p"},"useShow")," hook can infer ",(0,o.kt)("inlineCode",{parentName:"p"},"resource")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," parameters from the current URL."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=show.tsx",title:"show.tsx"},'import { useShow } from "@refinedev/core";\n\nexport const ShowPage = () => {\n  // const { queryResult } = useShow({ resource: "products", id: 1 });\n  // We don\'t need to pass "resource" and "id" parameters manually.\n  const { queryResult } = useShow();\n\n  const { data, isLoading } = queryResult;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return <>{data?.data.name}</>;\n};\n')),(0,o.kt)("p",null,"Another example is ",(0,o.kt)("inlineCode",{parentName:"p"},"useTable")," hook. While it can infer ",(0,o.kt)("strong",{parentName:"p"},"resource"),", ",(0,o.kt)("strong",{parentName:"p"},"pagination"),", ",(0,o.kt)("strong",{parentName:"p"},"filters"),", and ",(0,o.kt)("strong",{parentName:"p"},"sorters")," parameters from the current route, it can also update the current route if any of these parameters changes."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/routing/"},"Routing")," guide for more information.")),(0,o.kt)("h2",{id:"ui-integrations-3"},"UI Integrations"),(0,o.kt)("p",null,"While ",(0,o.kt)("strong",{parentName:"p"},"refine")," itself is headless, it offers UI Integrations for popular UI libraries for:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/antd"},"Ant Design")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/mui"},"Material UI")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/chakra-ui"},"Chakra UI")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/mantine"},"Mantine"))),(0,o.kt)("p",null,"These integrations use ",(0,o.kt)("inlineCode",{parentName:"p"},"@refinedev/core")," under the hood, becomes a bridge between the UI library and the ",(0,o.kt)("strong",{parentName:"p"},"refine")," framework."),(0,o.kt)(z,{wrapContent:!1,mdxType:"Tabs"},(0,o.kt)(G,{value:"Ant Design",mdxType:"TabItem"},(0,o.kt)(i,{mdxType:"AntdLayout"})),(0,o.kt)(G,{value:"Material UI",mdxType:"TabItem"},(0,o.kt)(u,{mdxType:"MaterialUILayout"})),(0,o.kt)(G,{value:"Chakra UI",mdxType:"TabItem"},(0,o.kt)(h,{mdxType:"ChakraUILayout"})),(0,o.kt)(G,{value:"Mantine",mdxType:"TabItem"},(0,o.kt)(k,{mdxType:"MantineLayout"}))),(0,o.kt)("h3",{id:"layout"},"Layout"),(0,o.kt)("p",null,"UI Integrations provides a Layout components, which renders the ",(0,o.kt)("strong",{parentName:"p"},"sidebar menu"),", ",(0,o.kt)("strong",{parentName:"p"},"header"),", and ",(0,o.kt)("strong",{parentName:"p"},"content")," area of your application."),(0,o.kt)("p",null,"It automatically renders the sidebar menu based on the ",(0,o.kt)("strong",{parentName:"p"},"resource definitions"),", and the header based on the ",(0,o.kt)("strong",{parentName:"p"},"current user"),"."),(0,o.kt)("h3",{id:"crud-pages"},"CRUD Pages"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"List"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Create"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Edit"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Show")," components."),(0,o.kt)("p",null,"These components provides layout view based on the resource information automatically like:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Header with title"),(0,o.kt)("li",{parentName:"ul"},"Breadcrumb"),(0,o.kt)("li",{parentName:"ul"},"Translated texts"),(0,o.kt)("li",{parentName:"ul"},"CRUD Buttons")),(0,o.kt)("p",null,"On top of that, ",(0,o.kt)("strong",{parentName:"p"},"refine")," adds some features to these layouts:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Access Control"),": If the current user isn't authorized to create a product, the create button will be disabled or hidden automatically."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Translation"),": buttons, titles, columns will be translated to the current language of the user.")),(0,o.kt)("h3",{id:"buttons"},"Buttons"),(0,o.kt)("p",null,"For example, our ",(0,o.kt)("strong",{parentName:"p"},"UI Integrations")," exports ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateButton"),", for redirecting the user to the create page of the resource."),(0,o.kt)("p",null,"While the button itself is imported from underlying UI package, ",(0,o.kt)("strong",{parentName:"p"},"refine")," adds some capabilities to it:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Routing"),": when the button is clicked, the user will be redirected to the create page of the resource."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Access Control"),": if current user isn't authorized, this button will be disabled or hidden automatically."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Translation"),": the button's text will be translated to the current language of the user.")),(0,o.kt)("h3",{id:"auth-pages"},"Auth Pages"),(0,o.kt)("p",null,"Common authentication pages like ",(0,o.kt)("inlineCode",{parentName:"p"},"Login"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Register"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Forgot Password"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Reset Password")," integrated with ",(0,o.kt)("inlineCode",{parentName:"p"},"AuthProvider")," automatically."),(0,o.kt)(z,{wrapContent:!1,mdxType:"Tabs"},(0,o.kt)(G,{value:"Headless",mdxType:"TabItem"},(0,o.kt)(N,{mdxType:"HeadlessAuth"})),(0,o.kt)(G,{value:"Ant Design",mdxType:"TabItem"},(0,o.kt)(R,{mdxType:"AntdAuth"})),(0,o.kt)(G,{value:"Material UI",mdxType:"TabItem"},(0,o.kt)(C,{mdxType:"MaterialUIAuth"})),(0,o.kt)(G,{value:"Chakra UI",mdxType:"TabItem"},(0,o.kt)(A,{mdxType:"ChakraUIAuth"})),(0,o.kt)(G,{value:"Mantine",mdxType:"TabItem"},(0,o.kt)(L,{mdxType:"MantineAuth"}))),(0,o.kt)("h3",{id:"ui-integration-hooks"},"UI Integration Hooks"),(0,o.kt)("p",null,"UI Integration hooks uses ",(0,o.kt)("inlineCode",{parentName:"p"},"@refinedev/core")," hooks under the hood, making it easier to use them in your UI specific components."),(0,o.kt)("p",null,"One example is, ",(0,o.kt)("inlineCode",{parentName:"p"},"useTable")," hook from ",(0,o.kt)("inlineCode",{parentName:"p"},"@refinedev/antd")," package. This hook uses ",(0,o.kt)("inlineCode",{parentName:"p"},"@refinedev/core"),"'s ",(0,o.kt)("inlineCode",{parentName:"p"},"useTable")," under the hood, but returns props compatible with ",(0,o.kt)("inlineCode",{parentName:"p"},"Ant Design"),"'s ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," component. So you don't need to manually map the props."),(0,o.kt)("h2",{id:"meta-concept"},"Meta Concept"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"meta")," is a special property that can be used to provide additional information to ",(0,o.kt)("strong",{parentName:"p"},"providers")," and ",(0,o.kt)("strong",{parentName:"p"},"UI Integrations"),"."),(0,o.kt)("p",null,"There are 3 ways to populate meta, they all will be ",(0,o.kt)("strong",{parentName:"p"},"merged into a single meta property")," and will be available to ",(0,o.kt)("strong",{parentName:"p"},"providers")," and ",(0,o.kt)("strong",{parentName:"p"},"UI integrations"),"."),(0,o.kt)(z,{mdxType:"Tabs"},(0,o.kt)(G,{value:"Meta from resource",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=App.tsx",title:"App.tsx"},'import { Refine } from "@refinedev/core";\n\nexport const App = () => {\n  return (\n    <Refine\n      resources={[\n        {\n          name: "products",\n          list: "/my-products",\n          // highlight-start\n          meta: {\n            fromResource: "Hello from resource.meta",\n          },\n          // highlight-end\n        },\n      ]}\n    >\n      {/* ... */}\n    </Refine>\n  );\n};\n'))),(0,o.kt)(G,{value:"Meta from hook",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=show.tsx",title:"show.tsx"},'import { useOne } from "@refinedev/core";\n\nexport const ShowPage = () => {\n  const { data, isLoading } = useOne({\n    resource: "products",\n    id: 1,\n    // highlight-start\n    meta: {\n      fromHook: "Hello from hook.meta",\n    },\n    // highlight-end\n  });\n};\n'))),(0,o.kt)(G,{value:"Meta from URL",mdxType:"TabItem"},(0,o.kt)("p",null,"Navigate to the following URL:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://example.com/products?fromURL=Hello%20from%20URL\n")))),(0,o.kt)("p",null,"Given the above examples, meta fields from ",(0,o.kt)("strong",{parentName:"p"},"3 different sources")," will be available in the providers:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=providers.tsx",title:"providers.tsx"},'import { AccessControlProvider, DataProvider } from "@refinedev/core";\n\nexport const myDataProvider = {\n  getOne: async ({ meta }) => {\n    console.log(meta.fromResource); // "Hello from resource.meta"\n    console.log(meta.fromHook); // "Hello from hook.meta"\n    console.log(meta.fromURL); // "Hello from URL"\n  },\n};\n\nexport const myAccessControlProvider = {\n  can: async ({ meta }) => {\n    console.log(meta.fromResource); // "Hello from resource.meta"\n    console.log(meta.fromHook); // "Hello from hook.meta"\n    console.log(meta.fromURL); // "Hello from URL"\n  },\n};\n')),(0,o.kt)("h3",{id:"example-use-cases"},"Example Use Cases"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Global filters"),": pass a filter to your ",(0,o.kt)("strong",{parentName:"li"},"data provider"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Multi-tenancy"),": make current tenant available id to providers."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Advanced Access Control"),": configuration per resource."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Customize UI"),": manage sidebar label and icon per resource.")),(0,o.kt)("p",null,"These are some but not all examples of how you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"meta")," property."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/components/refine-config/"},"Refine Component")," page for more information.")),(0,o.kt)("h2",{id:"state-management"},"State Management"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," leverages ",(0,o.kt)("strong",{parentName:"p"},"React Query")," for data fetching and caching, which enhances the performance and user experience of applications. React Query provides efficient data synchronization between your server and UI, making it easier to handle background updates, cache management, and data invalidation."),(0,o.kt)("p",null,"Key Aspects of State Management in refine:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Data Fetching and Caching"),": ",(0,o.kt)("strong",{parentName:"p"},"refine")," handles data fetching with ",(0,o.kt)("strong",{parentName:"p"},"built-in hooks")," that automatically manage the loading states, caching, and updating of data. This integration means fewer boilerplate codes and a more streamlined approach to handling server-state.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Invalidation and Refetching"),": One of the challenges in state management is knowing when to invalidate and refetch data. refine, through React Query, provides simple yet powerful mechanisms to control data refetching. This ensures that the UI always reflects the most current data.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Query Keys Structure"),": Each data fetching operation in refine is associated with a unique query key. These keys are used to uniquely identify and cache server responses, making it easy to optimize performance by reusing cached data when needed.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Mutation and Cache Updates"),": When a mutation (create, update, delete) occurs, refine allows for the automatic or manual invalidation of related queries. This ensures that the data your users interact with is always fresh and consistent with the backend."))),(0,o.kt)("h2",{id:"developer-experience"},"Developer Experience"),(0,o.kt)("h3",{id:"cli"},"CLI"),(0,o.kt)("p",null,"refine CLI allows you to interact with your ",(0,o.kt)("strong",{parentName:"p"},"refine")," project and perform certain tasks such as creating a new resource, managing version updates, swizzling components, running your project (build, start, dev)."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/packages/documentation/cli/"},"CLI")," page for more information.")),(0,o.kt)("h3",{id:"devtools"},"Devtools"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine devtools")," is designed to help you debug and develop your refine apps. It will be a collection of features including monitoring queries and mutations, testing out inferencer generated codes, adding and updating refine packages from the UI and more."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/devtools"},"Devtools")," package for more information.")),(0,o.kt)("h3",{id:"inferencer"},"Inferencer"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@refinedev/inferencer")," is a package that ",(0,o.kt)("strong",{parentName:"p"},"scaffolds")," code ",(0,o.kt)("strong",{parentName:"p"},"on the fly")," for your application based on your ",(0,o.kt)("strong",{parentName:"p"},"API responses"),"."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Inferencer ",(0,o.kt)("strong",{parentName:"p"},"scaffolds")," some basic boilerplate code to be used as a ",(0,o.kt)("strong",{parentName:"p"},"starting point")," to save some time."),(0,o.kt)("p",{parentName:"admonition"},"It's not ",(0,o.kt)("strong",{parentName:"p"},"guaranteed")," to work in all cases, and it's not meant to be used on ",(0,o.kt)("strong",{parentName:"p"},"production"),".")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/packages/documentation/inferencer/"},"Inferencer")," page for more information.")),(0,o.kt)("p",null,"For example, the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="list.tsx"',title:'"list.tsx"'},'import { AntdInferencer } from "@refinedev/inferencer/antd";\n// or @refinedev/inferencer/mui, @refinedev/inferencer/chakra, @refinedev/inferencer/mantine, @refinedev/inferencer/headless\n\nexport const ProductList = () => {\n  // Scaffolds List page.\n  return <AntdInferencer />;\n};\n\nexport const ProductShow = () => {\n  // Scaffolds Show page.\n  return <AntdInferencer />;\n};\n\nexport const ProductEdit = () => {\n  // Scaffolds Edit page with form.\n  return <AntdInferencer />;\n};\n\nexport const ProductCreate = () => {\n  // Scaffolds Create page with form.\n  return <AntdInferencer />;\n};\n')),(0,o.kt)("p",null,"An example of ",(0,o.kt)("strong",{parentName:"p"},"List Page")," scaffolded by inferencer looks like this;"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="generated-list.tsx"',title:'"generated-list.tsx"'},'import { List, ShowButton, useTable } from "@refinedev/antd";\nimport { BaseRecord, IResourceComponentsProps } from "@refinedev/core";\nimport { Space, Table } from "antd";\nimport React from "react";\n\nexport const ProductList: React.FC<IResourceComponentsProps> = () => {\n  const { tableProps } = useTable({\n    syncWithLocation: true,\n  });\n\n  return (\n    <List>\n      <Table {...tableProps} rowKey="id">\n        <Table.Column dataIndex="id" title="Id" />\n        <Table.Column dataIndex="name" title="Name" />\n        <Table.Column dataIndex="price" title="Price" />\n        <Table.Column\n          title="Actions"\n          dataIndex="actions"\n          render={(_, record: BaseRecord) => (\n            <Space>\n              <ShowButton hideText size="small" recordItemId={record.id} />\n            </Space>\n          )}\n        />\n      </Table>\n    </List>\n  );\n};\n')))}W.isMDXComponent=!0}}]);