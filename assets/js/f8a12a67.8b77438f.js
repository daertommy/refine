"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[12879],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),m=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=m(e.components);return i.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=m(n),d=a,p=h["".concat(l,".").concat(d)]||h[d]||u[d]||r;return n?i.createElement(p,o(o({ref:t},c),{},{components:n})):i.createElement(p,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var m=2;m<r;m++)o[m]=n[m];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},29539:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>m,toc:()=>u});n(67294);var i=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={title:"rem vs em - Everything you need to know",description:"We'll look at everything em and rem, their differences, when and how to use them, and practical examples of em and rem in action",slug:"rem-vs-em",authors:"fimber_elemuwa",tags:["css"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2022-12-21-em-vs-rem/social.png",hide_table_of_contents:!1},l=void 0,m={permalink:"/blog/rem-vs-em",source:"@site/blog/2022-12-21-em-vs-rem.md",title:"rem vs em - Everything you need to know",description:"We'll look at everything em and rem, their differences, when and how to use them, and practical examples of em and rem in action",date:"2022-12-21T00:00:00.000Z",formattedDate:"December 21, 2022",tags:[{label:"css",permalink:"/blog/tags/css"}],readingTime:7.27,hasTruncateMarker:!1,authors:[{name:"Fimber Elemuwa",title:"Web Developer",imageURL:"/img/generic-profile.png",key:"fimber_elemuwa"}],frontMatter:{title:"rem vs em - Everything you need to know",description:"We'll look at everything em and rem, their differences, when and how to use them, and practical examples of em and rem in action",slug:"rem-vs-em",authors:"fimber_elemuwa",tags:["css"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2022-12-21-em-vs-rem/social.png",hide_table_of_contents:!1},prevItem:{title:"Dynamic Forms with React Hook Form",permalink:"/blog/dynamic-forms-in-react-hook-form"},nextItem:{title:"git switch and git checkout \u2013 How to switch branches in git",permalink:"/blog/git-switch-and-git-checkout"},relatedPosts:[{title:"CSS Grid vs Flexbox - A brief guide",description:"In this brief guide, we compare some concept of the two most popular CSS layout methods - Grid and Flexbox.",permalink:"/blog/css-grid-vs-flexbox",formattedDate:"August 30, 2022",authors:[{name:"Muhammed  Sarwar",title:"Software Engineer",url:"https://twitter.com/arslans171",imageURL:"/img/generic-profile.png",key:"muhammed_arslan"}],readingTime:6.225,date:"2022-08-30T00:00:00.000Z"},{title:"Material UI Grid System in React",description:"We'll discover the Material UI Grid system with React examples",permalink:"/blog/material-ui-grid",formattedDate:"September 18, 2022",authors:[{name:"Doro Onome",title:"Software Developer",url:"https://github.com/Nomzy-kush",imageURL:"https://github.com/Nomzy-kush.png",key:"doro_onome"}],readingTime:13.085,date:"2022-09-18T00:00:00.000Z"},{title:"Creating a Responsive React Navbar with Tailwind CSS",description:"In this brief guide, we'll create a responsive navbar with Tailwind CSS and Bootstrap in React.",permalink:"/blog/react-navbar-responsive-tailwind",formattedDate:"October 7, 2022",authors:[{name:"Muhammed  Sarwar",title:"Software Engineer",url:"https://twitter.com/arslans171",imageURL:"/img/generic-profile.png",key:"muhammed_arslan"}],readingTime:8.485,date:"2022-10-07T00:00:00.000Z"}],authorPosts:[]},c={authorsImageUrls:[void 0]},u=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"em and rem units in CSS",id:"em-and-rem-units-in-css",level:2},{value:"What is CSS em",id:"what-is-css-em",level:2},{value:"What is CSS rem",id:"what-is-css-rem",level:2},{value:"Differences between em and rem units",id:"differences-between-em-and-rem-units",level:2},{value:"When to use em and rem units in CSS",id:"when-to-use-em-and-rem-units-in-css",level:2},{value:"Conclusion",id:"conclusion",level:2}],h=(d="PromotionBanner",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var d;const p={toc:u};function f(e){var{components:t}=e,n=o(e,["components"]);return(0,i.kt)("wrapper",r(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){a(e,t,n[t])}))}return e}({},p,n),{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"CSS is a crucial part of any website\u2019s design, but understanding the nuances of how to use it can be tricky.  One of the most important things to understand is the difference between using rem and em in CSS and why/when you should be using either. "),(0,i.kt)("p",null,"Understanding the differences between these two units is crucial for web developers who want to create flexible and responsive web pages that are easy to maintain and modify. It also helps your website meet current web accessibility guidelines."),(0,i.kt)("p",null,"In this article, we'll look at everything em and rem, their differences, when and how to use them, and practical examples of em and rem in action.  At the end of this article, you should have a solid understanding of both values. Without further ado, let\u2019s jump right into it."),(0,i.kt)("p",null,"Steps we'll cover in this article:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#em-and-rem-units-in-css"},"em and rem units in CSS")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#what-is-css-em"},"What is CSS em")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#what-is-css-rem"},"What is CSS rem")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#differences-between-em-and-rem-units"},"Differences between em and rem units")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#when-to-use-em-and-rem-units-in-css"},"When to use em and rem units in CSS"))),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"This article expects the reader to have a solid grasp of CSS. While you don\u2019t have to be a CSS god(Hi Kevin Powell), it\u2019d help if basic CSS terms do not confuse you. "),(0,i.kt)("h2",{id:"em-and-rem-units-in-css"},"em and rem units in CSS"),(0,i.kt)("p",null,"When looking for ways of specifying lengths in CSS, we\u2019re quite spoilt for choices. All units for specifying lengths in CSS fall under two categories."),(0,i.kt)("p",null,"Absolute lengths: Absolute lengths, as the name suggests, are absolute; they\u2019re fixed and don\u2019t react relative to anything. This means no matter what happens, they\u2019ll be the same size. Absolute lengths include cm, mm, in, px, pts, and pc.\nRelative lengths: Relative lengths are units that specify a length relative to another unit, i.e., they respond based on other specified units or elements. They include %, vmax, vmin, vh, vw, ch, ex, and the units we\u2019ll be talking about, em and rem. "),(0,i.kt)("p",null,"If you\u2019d like to know more about these units, you can do so here. Now let\u2019s look at the two units we came here for."),(0,i.kt)("h2",{id:"what-is-css-em"},"What is CSS em"),(0,i.kt)("p",null,"Like I said above, em units in CSS are a relative unit of measurement used to size elements on a web page, mostly font size. Because it\u2019s relative to its parent element, 1 em is equal to the font-size set in the parent element. "),(0,i.kt)("p",null,"This means if you set the font-size in a parent div to 20px and set the font-size of the child div to 2 em, the font-size in the child div will equal 40px. Here\u2019s an example."),(0,i.kt)("p",null,"First, let\u2019s write the HTML"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Document</title>\n    <link rel="stylesheet" href="style.css">\n</head>\n<body>\n   <div class="parent">\n    I\'m parent div set to 20px\n    <div class="child">\n        I\'m the child div set to 2em, i.e 40px.\n    </div>\n   </div>\n</body>\n</html>\n\nNext, the CSS.\n\n.parent{\n    font-size: 20px;\n}\n \n.child{\n    font-size: 2em;\n}\n \np {\n    font-size: 1.5em;\n }\n')),(0,i.kt)("p",null,"That will give us this."),(0,i.kt)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2022-12-21-em-vs-rem/em-vs-rem-1.png",alt:"em-vs-rem"}),(0,i.kt)("br",null),(0,i.kt)("p",null,"The em unit is useful because it allows you to adjust the size of elements on a page based on the font-size of a previously stated element, which helps create a consistent visual hierarchy. This can be useful for creating accessible websites that are easy to read for users with visual impairments. "),(0,i.kt)("p",null,"It\u2019s important to note that if you don\u2019t specify the value of a parent element, the default value of the browser is taken as the parent element. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"p {\n    font-size: 1.5em;\n }\n")),(0,i.kt)("p",null,"In this example, the font-size property is set to 1.5em, meaning that the text size in the ",(0,i.kt)("inlineCode",{parentName:"p"},"<p>")," element will be 1.5 times the size of the browser's default font-size if there\u2019s no direct parent element. "),(0,i.kt)("p",null,"Since most browsers scale their default font-size according to the screen size, this allows you to create flexible and responsive layouts that can adapt to different screen and font sizes. "),(0,i.kt)("p",null,"Using the appropriate CSS properties, em units can also be used to set the size of other elements, such as margins, padding, and borders. "),(0,i.kt)("hr",null),(0,i.kt)(h,{isDark:!0,title:"Open-source enterprise application platform for serious web developers",description:"refineNew",image:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/quick-start.gif",mdxType:"PromotionBanner"}),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"what-is-css-rem"},"What is CSS rem"),(0,i.kt)("p",null,'Now that we know what em is, let\u2019s look at rem. rem is another unit of measuring length in CSS, which stands for "root em". Since we know that an em is equal to the point size of the current font, we can deduce that the "root em"  refers to the font size of the root element, which is usually the ',(0,i.kt)("inlineCode",{parentName:"p"},"<html>")," element."),(0,i.kt)("p",null,"Confused? Let\u2019s break it down more."),(0,i.kt)("p",null,"Like em, rem inherits its size from a parent element, but the parent element that rem looks at is not the div or section above it, but the very first element that surrounds it, which is the html element. Let\u2019s make an example using the previous code. Same html code, with just an extra div."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Document</title>\n    <link rel="stylesheet" href="style.css">\n</head>\n<body>\n   <div class="parent">\n    I\'m parent div set to 20px\n    <div class="child">\n        I\'m the child div set to 2em, i.e 40px.\n    </div>\n    <div class="child-2">\n        I\'m the child div set to 2em, i.e 60px.\n    </div>\n   </div>\n</body>\n</html>\n')),(0,i.kt)("p",null,"Next, we\u2019ll add the following CSS code to our CSS file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"html{\n    font-size: 30px;\n }\n \n .child-2{\n    font-size: 2rem;\n }\n")),(0,i.kt)("p",null,"The result would be this."),(0,i.kt)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2022-12-21-em-vs-rem/em-vs-rem-2.png",alt:"em-vs-rem"}),(0,i.kt)("br",null),(0,i.kt)("p",null,"As you can see, despite the child-2 div being inside another divs, it goes back all the way to the html element to inherit its font size. "),(0,i.kt)("p",null,'Using the "rem" unit allows for a more scalable and flexible way to size elements on a page because if you change the font-size of the root element, all elements sized with the "rem" unit will be updated automatically to maintain their relative size.'),(0,i.kt)("p",null,"Here\u2019s a codepen link if you\u2019d like to play with the above code a bit. "),(0,i.kt)("h2",{id:"differences-between-em-and-rem-units"},"Differences between em and rem units"),(0,i.kt)("p",null,"By now, you already know the difference between em and rem, but just for the sake of clarity, I\u2019d like to restate the difference between both values."),(0,i.kt)("p",null,"In CSS, the rem unit is only relative to the document's root element, while the em unit is only relative to the immediate parent of the targeted element. This means that em sizes are inherited from parent elements, while rem sizes are inherited only from the root element."),(0,i.kt)("h2",{id:"when-to-use-em-and-rem-units-in-css"},"When to use em and rem units in CSS"),(0,i.kt)("p",null,"It is a good idea to use the rem unit for global values such as font-sizes, margins, and padding, especially if you want to specify a font-size for the entire document and have it scale uniformly rather than being influenced by the font sizes of parent elements."),(0,i.kt)("p",null,"em is more suited for values that are specific to a particular element and its children. This allows you to create a consistent and flexible layout that adjusts well to different screen sizes and font sizes.\nPotential problems with using em and rem units in CSS\nem and rem are by far the best units to use today when specifying length, but like all things in life, they\u2019re not perfect. These are a couple of problems you may run into when using em and rem:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Complex calculations:")," Using em and rem units can lead to complex calculations, especially when nested elements are involved. This can make it difficult to accurately predict and control the size of elements on a page."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Inheritance issues:")," Because em units are relative to the font size of their parent element, it can be difficult to understand and control how sizes are inherited across the page. This can lead to unexpected results and require additional debugging to resolve."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Performance issues:")," In some very rare cases, using em and rem units can have a negative impact on performance, especially when combined with complex calculations or used excessively on a page.")),(0,i.kt)("p",null,"Overall, while em and rem units can be helpful in certain situations, it's important to consider their potential drawbacks carefully and whether they are the best choice for your project."),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"If you made it here, congratulations! You now know all there is to know about em and rem and why we need them. Though they\u2019re both similar, they\u2019re distinctly different and should be treated accordingly. "),(0,i.kt)("p",null,"Personally, I prefer using rem over em for components, but I usually use em for headers and text elements. No real reason, just my quirk. I hope you found this article helpful, and I hope it becomes your cheatsheet whenever you get confused about em and rem."))}f.isMDXComponent=!0}}]);