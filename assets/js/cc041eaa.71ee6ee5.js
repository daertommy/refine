"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[42381],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),c=d(r),m=n,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return r?a.createElement(h,o(o({ref:t},l),{},{components:r})):a.createElement(h,o({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var d=2;d<i;d++)o[d]=r[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5590:(e,t,r)=>{r.d(t,{ZP:()=>s});r(67294);var a=r(3905);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const p={toc:[]};function s(e){var{components:t}=e,r=o(e,["components"]);return(0,a.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),a.forEach((function(t){n(e,t,r[t])}))}return e}({},p,r),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"refine")," supports many data providers. To include them in your project, you can use ",(0,a.kt)("inlineCode",{parentName:"p"},"npm install [packageName]")," or you can select the preferred data provider with the ",(0,a.kt)("inlineCode",{parentName:"p"},"npm create refine-app@latest projectName")," during the project creation phase with CLI. This will allow you to easily use these data providers in your project."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/simple-rest"},"Simple REST API")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/graphql"},"GraphQL")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/nestjsx-crud"},"NestJS CRUD")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/nestjs-query"},"Nestjs-Query")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/airtable"},"Airtable")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/strapi"},"Strapi")," - ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/strapi-v4"},"Strapi v4")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/strapi-graphql"},"Strapi GraphQL")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/supabase"},"Supabase")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/hasura"},"Hasura")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/appwrite"},"Appwrite")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/medusa"},"Medusa"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Community \u2764\ufe0f")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/resulturan/refine-firebase"},"Firebase")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/resulturan"},"rturan29")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/tspvivek/refine-directus"},"Directus")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/tspvivek"},"tspvivek")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/chirdeeptomar/refine-elide-rest"},"Elide")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/chirdeeptomar"},"chirdeeptomar")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/chirdeeptomar/refine-elide-graphql"},"Elide GraphQL")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/chirdeeptomar"},"chirdeeptomar")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/usegen/refine-use-generated"},"useGenerated")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/usegen"},"usegen")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://hygraph.com/"},"Hygraph")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/acomagu/refine-hygraph"},"acomagu")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.sanity.io"},"Sanity")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/hirenf14/refine-sanity"},"hirenf14")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.sqlite.org/index.html"},"SQLite")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/mateusabelli/refine-sqlite"},"mateusabelli")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://jsonapi.org/"},"JSON:API")," by ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/MahirMahdi/refine-jsonapi"},"mahirmahdi"))),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"If you have created a custom data provider and would like to share it with the community, please don't hesitate to get in touch with us. We would be happy to include it on this page for others to use.")))}s.isMDXComponent=!0},75368:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>v,frontMatter:()=>s,metadata:()=>l,toc:()=>c});r(67294);var a=r(3905),n=r(5590);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const s={id:"index",title:"1. Data Provider",tutorial:{order:0,prev:!1,next:"tutorial/understanding-dataprovider/swizzle"}},d=void 0,l={unversionedId:"tutorial/understanding-dataprovider/index",id:"tutorial/understanding-dataprovider/index",title:"1. Data Provider",description:"The Data Provider unit is optional for the tutorial. You can directly skip to the next unit, Adding CRUD PagesAdding CRUD PagesAdding CRUD PagesAdding CRUD PagesAdding CRUD Pages, if desired",source:"@site/docs/tutorial/2-understanding-dataprovider/0-intro.md",sourceDirName:"tutorial/2-understanding-dataprovider",slug:"/tutorial/understanding-dataprovider/index",permalink:"/docs/tutorial/understanding-dataprovider/index",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/tutorial/2-understanding-dataprovider/0-intro.md",tags:[],version:"current",lastUpdatedBy:"Ali Emir \u015een",lastUpdatedAt:1700518945,formattedLastUpdatedAt:"Nov 20, 2023",sidebarPosition:0,frontMatter:{id:"index",title:"1. Data Provider",tutorial:{order:0,prev:!1,next:"tutorial/understanding-dataprovider/swizzle"}}},u={},c=[{value:"What is data provider?",id:"what-is-data-provider",level:2},{value:"Using data providers in refine",id:"using-data-providers-in-refine",level:2},{value:"How are data provider methods used in the app?",id:"how-are-data-provider-methods-used-in-the-app",level:2},{value:"Supported data providers",id:"supported-data-providers",level:2}],m=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},h=m("UIConditional"),f=m("Checklist"),g=m("ChecklistItem"),k={toc:c};function v(e){var{components:t}=e,r=p(e,["components"]);return(0,a.kt)("wrapper",o(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),a.forEach((function(t){i(e,t,r[t])}))}return e}({},k,r),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The Data Provider unit is optional for the tutorial. You can directly skip to the next unit, ",(0,a.kt)(h,{is:"headless",mdxType:"UIConditional"},(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/headless/index"},"Adding CRUD Pages")),(0,a.kt)(h,{is:"antd",mdxType:"UIConditional"},(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/antd/index"},"Adding CRUD Pages")),(0,a.kt)(h,{is:"mantine",mdxType:"UIConditional"},(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/mantine/index"},"Adding CRUD Pages")),(0,a.kt)(h,{is:"chakra-ui",mdxType:"UIConditional"},(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/chakra-ui/index"},"Adding CRUD Pages")),(0,a.kt)(h,{is:"mui",mdxType:"UIConditional"},(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/mui/index"},"Adding CRUD Pages")),", if desired")),(0,a.kt)("h2",{id:"what-is-data-provider"},"What is data provider?"),(0,a.kt)("p",null,"Data provider acts as a data layer for your app, making HTTP requests and encapsulating how the data is retrieved. The methods of these requests are then consumed by ",(0,a.kt)("strong",{parentName:"p"},"refine")," via data hooks."),(0,a.kt)("p",null,"Data providers can also communicate with ",(0,a.kt)("inlineCode",{parentName:"p"},"REST"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"GraphQL"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"RPC")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"SOAP")," based APIs, so you can imagine the data provider as an adapter between ",(0,a.kt)("strong",{parentName:"p"},"refine")," and the API."),(0,a.kt)("p",null,"You don\u2019t need to worry about creating data providers from scratch, as ",(0,a.kt)("strong",{parentName:"p"},"refine")," offers built-in data provider support for the most popular ",(0,a.kt)("a",{parentName:"p",href:"#supported-data-providers"},"API providers"),". If you want, we will also show how you can create your own data provider in the coming sections."),(0,a.kt)("div",null,(0,a.kt)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/guides-and-concepts/providers/data-provider/api-consuming-flow.png"})),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("p",null,"A typical data provider has the following methods that are used to perform data operations:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { DataProvider } from "@refinedev/core";\n\nconst dataProvider: DataProvider = {\n    create: ({ resource, variables, meta }) => Promise,\n    deleteOne: ({ resource, id, variables, meta }) => Promise,\n    getList: ({\n        resource,\n        pagination,\n        sorters,\n        filters,\n        meta,\n    }) => Promise,\n    getOne: ({ resource, id, meta }) => Promise,\n    update: ({ resource, id, variables, meta }) => Promise,\n    getApiUrl: () => "",\n    ...\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"refine")," comes with various data providers out of the box, but for this tutorial, will be using the ",(0,a.kt)("inlineCode",{parentName:"p"},"refine-simple-rest")," data provider to communicate with RESTful APIs."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/simple-rest"},(0,a.kt)("inlineCode",{parentName:"a"},"refine-simple-rest")," source code","\u2192"))),(0,a.kt)("h2",{id:"using-data-providers-in-refine"},"Using data providers in refine"),(0,a.kt)("p",null,"In the previous unit, we already consumed the API to show the data in the auto-generated Inferencer pages and registered a data provider using the ",(0,a.kt)("inlineCode",{parentName:"p"},"dataProvider")," property of the ",(0,a.kt)("inlineCode",{parentName:"p"},"<Refine>")," component to allow ",(0,a.kt)("strong",{parentName:"p"},"refine")," communicate with the API:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'...\nimport dataProvider from "@refinedev/simple-rest";\n\n<Refine\n    ...\n    dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n/>;\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"For more information, refer to ",(0,a.kt)("strong",{parentName:"p"},"refine's")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/core/components/refine-config/#dataprovider"},"dataProvider prop component documentation","\u2192"))),(0,a.kt)("h2",{id:"how-are-data-provider-methods-used-in-the-app"},"How are data provider methods used in the app?"),(0,a.kt)("p",null,"When we want to fetch data from API, we do it by using ",(0,a.kt)("strong",{parentName:"p"},"refine's")," data hooks, which are internally connected to data provider methods. We pass the required parameters to the data provider methods, and then the API returns a response."),(0,a.kt)("p",null,"To illustrate this internal connection, imagine that we want to get all records from the ",(0,a.kt)("inlineCode",{parentName:"p"},"post")," resource using ",(0,a.kt)("strong",{parentName:"p"},"refine's")," ",(0,a.kt)("inlineCode",{parentName:"p"},"useList")," data hook."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/pages/posts/index.tsx"',title:'"src/pages/posts/index.tsx"'},'import { useList } from "@refinedev/core";\n\nconst postUseListResult = useList({\n    resource: "posts",\n    sorters: [\n        {\n            field: "id",\n            order: "desc",\n        },\n    ],\n    filters: [\n        {\n            field: "title",\n            operator: "contains",\n            value: "hello",\n        },\n    ],\n});\n')),(0,a.kt)("p",null,"As you can see, when we pass parameters to the ",(0,a.kt)("inlineCode",{parentName:"p"},"useList")," hook, ",(0,a.kt)("strong",{parentName:"p"},"refine")," automatically forwards them to the ",(0,a.kt)("inlineCode",{parentName:"p"},"getList")," method of the data provider. This is because ",(0,a.kt)("strong",{parentName:"p"},"refine")," connects all data provider methods to their corresponding data hooks in the background."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="dataProvider.ts"',title:'"dataProvider.ts"'},'const dataProvider = {\n    getList: (params) => {\n        console.log(params);\n        /*\n        {\n          "resource": "posts",\n          "sorters": [\n            {\n              "field": "id",\n              "order": "desc"\n            }\n          ],\n          "filters": [\n            {\n              "field": "title",\n              "operator": "contains",\n              "value": "hello"\n            }\n          ],\n        }\n        */\n    }\n    ...\n}\n')),(0,a.kt)("h2",{id:"supported-data-providers"},"Supported data providers"),(0,a.kt)(n.ZP,{mdxType:"SupportedDataProviders"}),(0,a.kt)(f,{mdxType:"Checklist"},(0,a.kt)(g,{id:"data-provider-intro",mdxType:"ChecklistItem"},"I understood what is data provider and how it works."),(0,a.kt)(g,{id:"data-provider-intro-2",mdxType:"ChecklistItem"},"I have learned that refine offers built-in data provider support for the most popular API providers.")))}v.isMDXComponent=!0}}]);